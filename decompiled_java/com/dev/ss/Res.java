// 도박중독 예방 캠페인
// 당신 곁에 우리가 있어요!
// 감당하기 힘든 어려움을 혼자 견디고 계신가요?
// 무엇을 어떻게 해야 할지 막막한가요?
// 당신의 이야기를 듣고 도움을 줄 수 있는 정보를 찾아 드립니다.
// - 한국도박문제관리센터 (국번없이 1336, 24시간)
// - KL중독관리센터 (전화상담  080-7575-535/545)
// - 사행산업통합감독위원회 불법사행산업감시신고센터 (전화상담 1588-0112)
// - 불법도박 등 범죄수익 신고 (지역번호 + 1301)

package com.dev.ss;

import com.badlogic.gdx.Gdx;
import com.badlogic.gdx.graphics.g2d.TextureAtlas;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.dev.ss.lib.Ani;
import com.dev.ss.lib.Img;
import com.dev.ss.lib.Util;
import com.dev.ss.obj.AddCard;
import com.dev.ss.obj.Background;
import com.dev.ss.obj.Bubble;
import com.dev.ss.obj.Coin;
import com.dev.ss.obj.Fin;
import com.dev.ss.obj.Fire;
import com.dev.ss.obj.Fireworks;
import com.dev.ss.obj.Fish;
import com.dev.ss.obj.Gage;
import com.dev.ss.obj.GiftFish;
import com.dev.ss.obj.Jellyfish;
import com.dev.ss.obj.MachineBack;
import com.dev.ss.obj.MachineScreen;
import com.dev.ss.obj.MiddleEvent;
import com.dev.ss.obj.Pin;
import com.dev.ss.obj.Prize;
import com.dev.ss.obj.Shark;
import com.dev.ss.obj.SpinAll;
import com.dev.ss.obj.Turtle;

public class Res {
    public static AddCard[] addCard;
    public static Ani aniAddLeftLight;
    public static Ani aniAddRightLight;
    public static Ani aniAdditionalChoiceBack2;
    public static Ani aniAdditionalWLT;
    public static Ani aniBackGift;
    public static Ani aniBackMoney;
    public static Ani aniBackNo;
    public static Ani aniBackSpin;
    public static Ani aniBonus;
    public static Ani aniClick;
    public static Ani aniDropper;
    public static Ani aniEvent;
    public static Ani aniEventBack;
    public static Ani aniHurryUp;
    public static Ani aniLady;
    public static Ani aniLine;
    public static Ani aniLineLampLB;
    public static Ani aniLineLampLC;
    public static Ani aniLineLampLT;
    public static Ani aniLineLampRB;
    public static Ani aniLineLampRC;
    public static Ani aniLineLampRT;
    public static Ani aniMermaid;
    public static MiddleEvent[] aniMiddleEvent;
    public static Ani aniPostLeft;
    public static Ani aniPostRight;
    public static Ani aniReserveBack;
    public static Background bgGameBottom1;
    public static Background bgGameBottom2;
    public static Background bgGameTop1;
    public static Background bgGameTop2;
    public static Ani bigSmall;
    public static Ani btnAdditional;
    public static Ani btnAdditionalChoice1000;
    public static Ani btnAdditionalChoice2000;
    public static Img btnCoin;
    public static Ani btnGo;
    public static Ani btnHigh;
    public static Ani btnLow;
    public static Ani btnMenu;
    public static Ani btnNewGame;
    public static Ani btnReserve;
    public static Ani btnStop;
    public static Img btnSwitch;
    public static Bubble bubbleCenter1;
    public static Bubble bubbleCenter2;
    public static Bubble bubbleLeft;
    public static Bubble bubbleRight;
    public static Coin[] coin;
    public static float fBaseLineY0;
    public static float fBaseLineY1;
    public static float fBaseLineY2;
    public static float fBaseLineY3;
    public static float fBaseLineY4;
    public static float fBaseLineY5;
    public static Fin[] fin;
    public static Fire[] fire;
    public static Fireworks[] fireworks;
    public static Fish[] fishLeft;
    public static Fish[] fishRight;
    public static Gage[] gage;
    public static GiftFish[] gfFish;
    public static float iBaseLinePixelX1;
    public static float iBaseLinePixelX2;
    public static float iBaseLinePixelX3;
    public static float iBaseLinePixelX4;
    public static float iBaseLinePixelY0;
    public static float iBaseLinePixelY1;
    public static float iBaseLinePixelY2;
    public static float iBaseLinePixelY3;
    public static float iBaseLinePixelY4;
    public static float iBaseLinePixelY5;
    public static Img imgAdditionalBack1;
    public static Img imgAdditionalBack2;
    public static Img imgAdditionalChoiceBack1;
    public static Img imgAdditionalTimer;
    public static Img imgBackAsk;
    public static Img imgBackCharge;
    public static Img imgBackExchange;
    public static Img imgBackHelp;
    public static Img imgBackLight;
    public static Img imgBackMenu1;
    public static Img imgBackMenu2;
    public static Img imgBackNewGame;
    public static Img imgBtnAskInput;
    public static Img imgBtnAskOn;
    public static Img imgBtnCharge;
    public static Img imgBtnChargeOn;
    public static Img imgBtnCloseMenu;
    public static Img imgBtnExchange;
    public static Img imgBtnExchangeBank;
    public static Img imgBtnExchangeOn;
    public static Img imgBtnExchangeOwner;
    public static Img imgBtnHelpOn;
    public static Img imgBtnMachineOn;
    public static Img imgBtnMoneyMan;
    public static Img imgChannelLeft;
    public static Img imgChannelRight;
    public static Img imgChatBack;
    public static Img imgDayNight;
    public static Img imgGageBack;
    public static Img imgInter;
    public static Img imgInterBottom;
    public static Img imgInterLeft;
    public static Img imgInterRight;
    public static Prize imgPrize;
    public static Img imgWinTableBottom1;
    public static Img imgWinTableBottom2;
    public static Img imgWinTableTop1;
    public static Img imgWinTableTop2;
    public static Jellyfish[] jellyfish;
    public static TextureAtlas leaner;
    public static MachineBack[] machineBack;
    public static MachineScreen[] machineScreen;
    public static TextureAtlas nearest;
    public static Pin[] pin;
    public static TextureRegion[] rgAddCard;
    public static TextureRegion[] rgBackground;
    public static TextureRegion[] rgBubble;
    public static TextureRegion[] rgCard;
    public static TextureRegion[] rgCoin;
    public static TextureRegion[] rgFin;
    public static TextureRegion[] rgFire;
    public static TextureRegion[] rgFireworks;
    public static TextureRegion[] rgFishLeft;
    public static TextureRegion[] rgFishRight;
    public static TextureRegion[] rgGage;
    public static TextureRegion[] rgItem;
    public static TextureRegion[] rgJellyfish;
    public static TextureRegion[] rgMachineBack;
    public static TextureRegion[] rgMachineScreen;
    public static TextureRegion[] rgPin;
    public static TextureRegion[] rgPrize;
    public static TextureRegion[] rgSharkl;
    public static TextureRegion[] rgSharkr;
    public static TextureRegion rgWhale;
    public static Shark[] shark;
    public static Ani[] spinAll;
    public static Turtle[] turtleLeft;
    public static Turtle[] turtleRight;

    static  {
        Res.leaner = null;
        Res.nearest = null;
        Res.rgFishLeft = new TextureRegion[42];
        Res.rgFishRight = new TextureRegion[42];
        Res.fishLeft = new Fish[10];
        Res.fishRight = new Fish[10];
        Res.rgCoin = new TextureRegion[3];
        Res.coin = new Coin[30];
        Res.rgTurtleLeft = new TextureRegion[22];
        Res.rgTurtleRight = new TextureRegion[22];
        Res.turtleLeft = new Turtle[10];
        Res.turtleRight = new Turtle[10];
        Res.rgJellyfish = new TextureRegion[30];
        Res.jellyfish = new Jellyfish[15];
        Res.rgFireworks = new TextureRegion[90];
        Res.fireworks = new Fireworks[20];
        Res.rgPin = new TextureRegion[4];
        Res.pin = new Pin[33];
        Res.rgSharkl = new TextureRegion[38];
        Res.rgSharkr = new TextureRegion[17];
        Res.shark = new Shark[4];
        Res.rgWhale = new TextureRegion();
        Res.rgFin = new TextureRegion[24];
        Res.fin = new Fin[2];
        Res.aniMermaid = null;
        Res.imgBackLight = null;
        Res.aniLine = null;
        Res.aniLineLampLT = null;
        Res.aniLineLampLC = null;
        Res.aniLineLampLB = null;
        Res.aniLineLampRT = null;
        Res.aniLineLampRC = null;
        Res.aniLineLampRB = null;
        Res.aniEventBack = null;
        Res.aniEvent = null;
        Res.aniMiddleEvent = new MiddleEvent[4];
        Res.rgBubble = new TextureRegion[40];
        Res.bubbleLeft = null;
        Res.bubbleRight = null;
        Res.bubbleCenter1 = null;
        Res.bubbleCenter2 = null;
        Res.bgGameTop1 = null;
        Res.bgGameTop2 = null;
        Res.bgGameBottom1 = null;
        Res.bgGameBottom2 = null;
        Res.rgBackground = new TextureRegion[2];
        Res.imgChatBack = null;
        Res.imgGageBack = null;
        Res.aniReserveBack = null;
        Res.imgInter = null;
        Res.imgInterBottom = null;
        Res.imgInterLeft = null;
        Res.imgInterRight = null;
        Res.imgWinTableTop1 = null;
        Res.imgWinTableTop2 = null;
        Res.imgWinTableBottom1 = null;
        Res.imgWinTableBottom2 = null;
        Res.aniPostLeft = null;
        Res.aniPostRight = null;
        Res.aniDropper = null;
        Res.imgDayNight = null;
        Res.imgAdditionalBack1 = null;
        Res.imgAdditionalBack2 = null;
        Res.btnAdditional = null;
        Res.btnAdditionalChoice1000 = null;
        Res.btnAdditionalChoice2000 = null;
        Res.imgAdditionalChoiceBack1 = null;
        Res.aniAdditionalChoiceBack2 = null;
        Res.bigSmall = null;
        Res.aniBonus = null;
        Res.btnGo = null;
        Res.btnStop = null;
        Res.btnHigh = null;
        Res.btnLow = null;
        Res.btnNewGame = null;
        Res.imgBackNewGame = null;
        Res.imgAdditionalTimer = null;
        Res.aniLady = null;
        Res.aniAdditionalWLT = null;
        Res.aniHurryUp = null;
        Res.aniAddRightLight = null;
        Res.aniAddLeftLight = null;
        Res.aniBackGift = null;
        Res.aniBackSpin = null;
        Res.aniBackNo = null;
        Res.aniBackMoney = null;
        Res.btnReserve = null;
        Res.btnMenu = null;
        Res.btnCoin = null;
        Res.btnSwitch = null;
        Res.rgFire = new TextureRegion[41];
        Res.fire = new Fire[3];
        Res.rgMachineScreen = new TextureRegion[3];
        Res.rgMachineBack = new TextureRegion[4];
        Res.imgChannelLeft = null;
        Res.imgChannelRight = null;
        Res.rgGage = new TextureRegion[15];
        Res.gage = new Gage[10];
        Res.machineBack = new MachineBack[12];
        Res.machineScreen = new MachineScreen[12];
        Res.imgBackMenu1 = null;
        Res.imgBackMenu2 = null;
        Res.imgBtnHelpOn = null;
        Res.imgBtnMachineOn = null;
        Res.imgBtnAskOn = null;
        Res.imgBtnExchangeOn = null;
        Res.imgBtnChargeOn = null;
        Res.imgBtnCloseMenu = null;
        Res.imgBtnAskInput = null;
        Res.imgBtnExchangeBank = null;
        Res.imgBtnExchangeOwner = null;
        Res.imgBtnMoneyMan = null;
        Res.imgBackCharge = null;
        Res.imgBackExchange = null;
        Res.imgBackAsk = null;
        Res.imgBackHelp = null;
        Res.imgBtnCharge = null;
        Res.imgBtnExchange = null;
        Res.addCard = new AddCard[10];
        Res.imgPrize = null;
        Res.gfFish = new GiftFish[3];
        Res.spinAll = new SpinAll[3];
        Res.aniClick = null;
    }

    public Res() {
        super();
    }

    public static void dispose() {  // has try-catch handlers
        try {
            Res.leaner.dispose();
        }
        catch(Exception v0) {
        }

        TextureAtlas v0_1 = null;
        try {
            Res.leaner = v0_1;
            goto label_4;
        }
        catch(Exception v0) {
            goto label_4;
        }

        try {
        label_4:
            Res.nearest.dispose();
        }
        catch(Exception v0) {
        }

        v0_1 = null;
        try {
            Res.nearest = v0_1;
        }
        catch(Exception v0) {
        }
    }

    public static void ini() {
        Res.leaner = new TextureAtlas(Gdx.files.internal("data/_linear.atlas"));
        Res.nearest = new TextureAtlas(Gdx.files.internal("data/_nearest.atlas"));
        Res.iniBackground();
        Res.iniButtons();
        Res.iniCardBaseLine();
        Res.iniCards();
        Res.iniAddCards();
        Res.iniItems();
        Res.iniLine();
        Res.iniMachine();
        Res.iniMenu();
        Res.iniFish();
        Res.iniBubble();
        Res.iniTurtle();
        Res.iniWhale();
        Res.iniJellyFish();
        Res.iniShark();
        Res.iniMermaid();
        Res.iniFireworks();
        Res.iniEvent();
        Res.iniPin();
        Res.iniEtc();
        Res.iniCoin();
        Res.iniAdditional();
    }

    private static void iniAddCards() {
        int v9 = 2;
        float v6 = 934f;
        float v5 = 690f;
        Res.rgAddCard = new TextureRegion[53];
        Res.rgAddCard[0] = Res.leaner.findRegion("card/BACK");
        Res.rgAddCard[1] = Res.leaner.findRegion("card/C1");
        Res.rgAddCard[v9] = Res.leaner.findRegion("card/C2");
        Res.rgAddCard[3] = Res.leaner.findRegion("card/C3");
        Res.rgAddCard[4] = Res.leaner.findRegion("card/C4");
        Res.rgAddCard[5] = Res.leaner.findRegion("card/C5");
        Res.rgAddCard[6] = Res.leaner.findRegion("card/C6");
        Res.rgAddCard[7] = Res.leaner.findRegion("card/C7");
        Res.rgAddCard[8] = Res.leaner.findRegion("card/C8");
        Res.rgAddCard[9] = Res.leaner.findRegion("card/C9");
        Res.rgAddCard[10] = Res.leaner.findRegion("card/C0");
        Res.rgAddCard[11] = Res.leaner.findRegion("card/CJ");
        Res.rgAddCard[12] = Res.leaner.findRegion("card/CQ");
        Res.rgAddCard[13] = Res.leaner.findRegion("card/CK");
        Res.rgAddCard[14] = Res.leaner.findRegion("card/D1");
        Res.rgAddCard[15] = Res.leaner.findRegion("card/D2");
        Res.rgAddCard[16] = Res.leaner.findRegion("card/D3");
        Res.rgAddCard[17] = Res.leaner.findRegion("card/D4");
        Res.rgAddCard[18] = Res.leaner.findRegion("card/D5");
        Res.rgAddCard[19] = Res.leaner.findRegion("card/D6");
        Res.rgAddCard[20] = Res.leaner.findRegion("card/D7");
        Res.rgAddCard[21] = Res.leaner.findRegion("card/D8");
        Res.rgAddCard[22] = Res.leaner.findRegion("card/D9");
        Res.rgAddCard[23] = Res.leaner.findRegion("card/D0");
        Res.rgAddCard[24] = Res.leaner.findRegion("card/DJ");
        Res.rgAddCard[25] = Res.leaner.findRegion("card/DQ");
        Res.rgAddCard[26] = Res.leaner.findRegion("card/DK");
        Res.rgAddCard[27] = Res.leaner.findRegion("card/H1");
        Res.rgAddCard[28] = Res.leaner.findRegion("card/H2");
        Res.rgAddCard[29] = Res.leaner.findRegion("card/H3");
        Res.rgAddCard[30] = Res.leaner.findRegion("card/H4");
        Res.rgAddCard[31] = Res.leaner.findRegion("card/H5");
        Res.rgAddCard[32] = Res.leaner.findRegion("card/H6");
        Res.rgAddCard[33] = Res.leaner.findRegion("card/H7");
        Res.rgAddCard[34] = Res.leaner.findRegion("card/H8");
        Res.rgAddCard[35] = Res.leaner.findRegion("card/H9");
        Res.rgAddCard[36] = Res.leaner.findRegion("card/H0");
        Res.rgAddCard[37] = Res.leaner.findRegion("card/HJ");
        Res.rgAddCard[38] = Res.leaner.findRegion("card/HQ");
        Res.rgAddCard[39] = Res.leaner.findRegion("card/HK");
        Res.rgAddCard[40] = Res.leaner.findRegion("card/S1");
        Res.rgAddCard[41] = Res.leaner.findRegion("card/S2");
        Res.rgAddCard[42] = Res.leaner.findRegion("card/S3");
        Res.rgAddCard[43] = Res.leaner.findRegion("card/S4");
        Res.rgAddCard[44] = Res.leaner.findRegion("card/S5");
        Res.rgAddCard[45] = Res.leaner.findRegion("card/S6");
        Res.rgAddCard[46] = Res.leaner.findRegion("card/S7");
        Res.rgAddCard[47] = Res.leaner.findRegion("card/S8");
        Res.rgAddCard[48] = Res.leaner.findRegion("card/S9");
        Res.rgAddCard[49] = Res.leaner.findRegion("card/S0");
        Res.rgAddCard[50] = Res.leaner.findRegion("card/SJ");
        Res.rgAddCard[51] = Res.leaner.findRegion("card/SQ");
        Res.rgAddCard[52] = Res.leaner.findRegion("card/SK");
        int v0;
        for(v0 = 0; v0 < 10; ++v0) {
            Res.addCard[v0] = new AddCard();
            AddCard v1 = Res.addCard[v0];
            String[] v2 = new String[53];
            v2[0] = "XX";
            v2[1] = "C1";
            v2[v9] = "C2";
            v2[3] = "C3";
            v2[4] = "C4";
            v2[5] = "C5";
            v2[6] = "C6";
            v2[7] = "C7";
            v2[8] = "C8";
            v2[9] = "C9";
            v2[10] = "C0";
            v2[11] = "CJ";
            v2[12] = "CQ";
            v2[13] = "CK";
            v2[14] = "D1";
            v2[15] = "D2";
            v2[16] = "D3";
            v2[17] = "D4";
            v2[18] = "D5";
            v2[19] = "D6";
            v2[20] = "D7";
            v2[21] = "D8";
            v2[22] = "D9";
            v2[23] = "D0";
            v2[24] = "DJ";
            v2[25] = "DQ";
            v2[26] = "DK";
            v2[27] = "H1";
            v2[28] = "H2";
            v2[29] = "H3";
            v2[30] = "H4";
            v2[31] = "H5";
            v2[32] = "H6";
            v2[33] = "H7";
            v2[34] = "H8";
            v2[35] = "H9";
            v2[36] = "H0";
            v2[37] = "HJ";
            v2[38] = "HQ";
            v2[39] = "HK";
            v2[40] = "S1";
            v2[41] = "S2";
            v2[42] = "S3";
            v2[43] = "S4";
            v2[44] = "S5";
            v2[45] = "S6";
            v2[46] = "S7";
            v2[47] = "S8";
            v2[48] = "S9";
            v2[49] = "S0";
            v2[50] = "SJ";
            v2[51] = "SQ";
            v2[52] = "SK";
            v1.setNames(v2);
            Res.addCard[v0].setImage("XX");
            Res.addCard[v0].setSize(Util.getWidth(137f), Util.getHeight(190f));
            Res.addCard[v0].visible = true;
        }

        Res.addCard[0].setPosition(Util.getLeft(60f), Util.getTop(v6, Res.addCard[0].height));
        Res.addCard[1].setPosition(Util.getLeft(108f), Util.getTop(v6, Res.addCard[1].height));
        Res.addCard[v9].setPosition(Util.getLeft(156f), Util.getTop(v6, Res.addCard[v9].height));
        Res.addCard[3].setPosition(Util.getLeft(204f), Util.getTop(v6, Res.addCard[3].height));
        Res.addCard[4].setPosition(Util.getLeft(252f), Util.getTop(v6, Res.addCard[4].height));
        Res.addCard[9].setPosition(Util.getLeft(60f), Util.getTop(v5, Res.addCard[9].height));
        Res.addCard[8].setPosition(Util.getLeft(108f), Util.getTop(v5, Res.addCard[8].height));
        Res.addCard[7].setPosition(Util.getLeft(156f), Util.getTop(v5, Res.addCard[7].height));
        Res.addCard[6].setPosition(Util.getLeft(204f), Util.getTop(v5, Res.addCard[6].height));
        Res.addCard[5].setPosition(Util.getLeft(252f), Util.getTop(v5, Res.addCard[5].height));
    }

    private static void iniAdditional() {
        TextureRegion[] v2 = new TextureRegion[1];
        v2[0] = Res.leaner.findRegion("additional/additionalBack1");
        Res.imgAdditionalBack1 = new Img(v2);
        Res.imgAdditionalBack1.setSize(Util.getWidth(768f), Util.getHeight(1024f));
        Res.imgAdditionalBack1.setPosition(Util.getLeft(0f), Util.getTop(0f, Res.imgAdditionalBack1.height));
        v2 = new TextureRegion[1];
        v2[0] = Res.leaner.findRegion("additional/additionalBack2");
        Res.imgAdditionalBack2 = new Img(v2);
        Res.imgAdditionalBack2.setSize(Util.getWidth(768f), Util.getHeight(256f));
        Res.imgAdditionalBack2.setPosition(Util.getLeft(0f), Util.getTop(1024f, Res.imgAdditionalBack2.height));
        TextureRegion[] v3 = new TextureRegion[2];
        v3[0] = Res.leaner.findRegion("btn_additional1");
        v3[1] = Res.leaner.findRegion("btn_additional2");
        Res.btnAdditional = new Ani(0, 2f, v3);
        Res.btnAdditional.setSize(Util.getWidth(77f), Util.getHeight(89f));
        Res.btnAdditional.setPosition(Util.getLeft(683f), Util.getTop(587f, Res.btnAdditional.height));
        TextureRegion[] v4 = new TextureRegion[12];
        v4[0] = Res.leaner.findRegion("additional/imgTimeOver0");
        v4[1] = Res.leaner.findRegion("additional/imgTimeOver1");
        v4[2] = Res.leaner.findRegion("additional/imgTimeOver2");
        v4[3] = Res.leaner.findRegion("additional/imgWin0");
        v4[4] = Res.leaner.findRegion("additional/imgWin1");
        v4[5] = Res.leaner.findRegion("additional/imgWin2");
        v4[6] = Res.leaner.findRegion("additional/imgLose0");
        v4[7] = Res.leaner.findRegion("additional/imgLose1");
        v4[8] = Res.leaner.findRegion("additional/imgLose2");
        v4[9] = Res.leaner.findRegion("additional/imgTie0");
        v4[10] = Res.leaner.findRegion("additional/imgTie1");
        v4[11] = Res.leaner.findRegion("additional/imgTie2");
        Res.aniAdditionalWLT = new Ani(4, 0.1f, v4);
        Res.aniAdditionalWLT.setSize(Util.getWidth(512f), Util.getHeight(256f));
        Res.aniAdditionalWLT.setPosition(Util.getLeft(128f), Util.getTop(550f, Res.aniAdditionalWLT.height));
        Res.aniAdditionalWLT.setPart(0, "O", 0, 0.2f, new int[]{0, 1, 2});
        Res.aniAdditionalWLT.setPart(1, "W", 3, 0.2f, new int[]{3, 4, 5});
        Res.aniAdditionalWLT.setPart(2, "L", 6, 0.2f, new int[]{6, 7, 8});
        Res.aniAdditionalWLT.setPart(3, "T", 9, 0.2f, new int[]{9, 10, 11});
        Res.aniAdditionalWLT.bHideWhenStop = true;
        Res.aniAdditionalWLT.visible = false;
        v3 = new TextureRegion[3];
        v3[0] = Res.leaner.findRegion("additional/imgHurryUp0");
        v3[1] = Res.leaner.findRegion("additional/imgHurryUp1");
        v3[2] = Res.leaner.findRegion("additional/imgHurryUp2");
        Res.aniHurryUp = new Ani(0, 0.1f, v3);
        Res.aniHurryUp.setSize(Util.getWidth(521f), Util.getHeight(319f));
        Res.aniHurryUp.setPosition(Util.getLeft(125f), Util.getTop(267f, Res.aniHurryUp.height));
        Res.aniHurryUp.bHideWhenStop = true;
        Res.aniHurryUp.visible = false;
        v3 = new TextureRegion[2];
        v3[0] = Res.leaner.findRegion("additional/add_right_light");
        v3[1] = Res.leaner.findRegion("additional/clear");
        Res.aniAddRightLight = new Ani(0, 1.2f, v3);
        Res.aniAddRightLight.setSize(Util.getWidth(334f), Util.getHeight(440f));
        Res.aniAddRightLight.setPosition(Util.getLeft(0f), Util.getTop(124f, Res.aniHurryUp.height));
        Res.aniAddRightLight.play(true);
        Res.aniAddRightLight.visible = true;
        v3 = new TextureRegion[2];
        v3[0] = Res.leaner.findRegion("additional/add_left_light");
        v3[1] = Res.leaner.findRegion("additional/clear");
        Res.aniAddLeftLight = new Ani(0, 1.2f, v3);
        Res.aniAddLeftLight.setSize(Util.getWidth(334f), Util.getHeight(440f));
        Res.aniAddLeftLight.setPosition(Util.getLeft(434f), Util.getTop(124f, Res.aniHurryUp.height));
        Res.aniAddLeftLight.play(true);
        Res.aniAddLeftLight.visible = true;
        v3 = new TextureRegion[1];
        v3[0] = Res.leaner.findRegion("additional/additional1000");
        Res.btnAdditionalChoice1000 = new Ani(0, 2f, v3);
        Res.btnAdditionalChoice1000.setSize(Util.getWidth(230f), Util.getHeight(104f));
        Res.btnAdditionalChoice1000.setPosition(Util.getLeft(150f), Util.getTop(500f, Res.btnAdditionalChoice1000.height));
        Res.btnAdditionalChoice1000.visible = false;
        v3 = new TextureRegion[1];
        v3[0] = Res.leaner.findRegion("additional/additional2000");
        Res.btnAdditionalChoice2000 = new Ani(0, 2f, v3);
        Res.btnAdditionalChoice2000.setSize(Util.getWidth(220f), Util.getHeight(104f));
        Res.btnAdditionalChoice2000.setPosition(Util.getLeft(400f), Util.getTop(500f, Res.btnAdditionalChoice2000.height));
        Res.btnAdditionalChoice2000.visible = false;
        v2 = new TextureRegion[1];
        v2[0] = Res.leaner.findRegion("additional/additionalChoiceBack1");
        Res.imgAdditionalChoiceBack1 = new Img(v2);
        Res.imgAdditionalChoiceBack1.setSize(Util.getWidth(768f), Util.getHeight(1280f));
        Res.imgAdditionalChoiceBack1.setPosition(Util.getLeft(0f), Util.getTop(0f, Res.imgAdditionalChoiceBack1.height));
        v3 = new TextureRegion[2];
        v3[0] = Res.leaner.findRegion("additional/additionalChoiceBack2");
        v3[1] = Res.leaner.findRegion("additional/additionalChoiceBack3");
        Res.aniAdditionalChoiceBack2 = new Ani(0, 0.2f, v3);
        Res.aniAdditionalChoiceBack2.setSize(Util.getWidth(595f), Util.getHeight(339f));
        Res.aniAdditionalChoiceBack2.setPosition(Util.getLeft(86f), Util.getTop(340f, Res.aniAdditionalChoiceBack2.height));
        Res.aniAdditionalChoiceBack2.play(true);
        v3 = new TextureRegion[4];
        v3[0] = Res.leaner.findRegion("additional/bigsmall0");
        v3[1] = Res.leaner.findRegion("additional/bigsmall1");
        v3[2] = Res.leaner.findRegion("additional/bigsmall2");
        v3[3] = Res.leaner.findRegion("additional/bigsmall3");
        Res.bigSmall = new Ani(3, 2f, v3);
        Res.bigSmall.setPart(0, "samll", 0, 0.5f, new int[]{0, 1});
        Res.bigSmall.setPart(1, "big", 2, 0.5f, new int[]{2, 3});
        Res.bigSmall.setPart(2, "bigsmall", 0, 0.5f, new int[]{0, 1, 2, 3});
        Res.bigSmall.setSize(Util.getWidth(157f), Util.getHeight(165f));
        Res.bigSmall.setPosition(Util.getLeft(462f), Util.getTop(697f, Res.bigSmall.height));
        v3 = new TextureRegion[3];
        v3[0] = Res.leaner.findRegion("additional/btnLow1");
        v3[1] = Res.leaner.findRegion("additional/btnLow2");
        v3[2] = Res.leaner.findRegion("additional/btnLowX");
        Res.btnLow = new Ani(2, 2f, v3);
        Res.btnLow.setPart(0, "o", 0, 1f, new int[]{0, 1});
        Ani v2_1 = Res.btnLow;
        int[] v7 = new int[1];
        v7[0] = 2;
        v2_1.setPart(1, "x", 1, 1f, v7);
        Res.btnLow.setSize(Util.getWidth(170f), Util.getHeight(92f));
        Res.btnLow.setPosition(Util.getLeft(214f), Util.getTop(1159f, Res.btnLow.height));
        v3 = new TextureRegion[3];
        v3[0] = Res.leaner.findRegion("additional/btnHigh1");
        v3[1] = Res.leaner.findRegion("additional/btnHigh2");
        v3[2] = Res.leaner.findRegion("additional/btnHighX");
        Res.btnHigh = new Ani(2, 2f, v3);
        Res.btnHigh.setPart(0, "o", 0, 1f, new int[]{0, 1});
        v2_1 = Res.btnHigh;
        v7 = new int[1];
        v7[0] = 2;
        v2_1.setPart(1, "x", 1, 1f, v7);
        Res.btnHigh.setSize(Util.getWidth(170f), Util.getHeight(92f));
        Res.btnHigh.setPosition(Util.getLeft(30f), Util.getTop(1159f, Res.btnHigh.height));
        v3 = new TextureRegion[3];
        v3[0] = Res.leaner.findRegion("additional/btnGo1");
        v3[1] = Res.leaner.findRegion("additional/btnGo2");
        v3[2] = Res.leaner.findRegion("additional/btnGoX");
        Res.btnGo = new Ani(2, 2f, v3);
        Res.btnGo.setPart(0, "o", 0, 1f, new int[]{0, 1});
        v2_1 = Res.btnGo;
        v7 = new int[1];
        v7[0] = 2;
        v2_1.setPart(1, "x", 1, 1f, v7);
        Res.btnGo.setSize(Util.getWidth(170f), Util.getHeight(92f));
        Res.btnGo.setPosition(Util.getLeft(395f), Util.getTop(1159f, Res.btnGo.height));
        v3 = new TextureRegion[3];
        v3[0] = Res.leaner.findRegion("additional/btnStop1");
        v3[1] = Res.leaner.findRegion("additional/btnStop2");
        v3[2] = Res.leaner.findRegion("additional/btnStopX");
        Res.btnStop = new Ani(2, 2f, v3);
        Res.btnStop.setPart(0, "o", 0, 1f, new int[]{0, 1});
        v2_1 = Res.btnStop;
        v7 = new int[1];
        v7[0] = 2;
        v2_1.setPart(1, "x", 1, 1f, v7);
        Res.btnStop.setSize(Util.getWidth(170f), Util.getHeight(92f));
        Res.btnStop.setPosition(Util.getLeft(579f), Util.getTop(1159f, Res.btnStop.height));
        v3 = new TextureRegion[2];
        v3[0] = Res.leaner.findRegion("additional/btnNewGame0");
        v3[1] = Res.leaner.findRegion("additional/btnNewGame1");
        Res.btnNewGame = new Ani(0, 0.2f, v3);
        Res.btnNewGame.setSize(Util.getWidth(512f), Util.getHeight(256f));
        Res.btnNewGame.setPosition(Util.getLeft(128f), Util.getTop(550f, Res.btnNewGame.height));
        Res.btnNewGame.play(true);
        Res.btnNewGame.visible = false;
        v2 = new TextureRegion[1];
        v2[0] = Res.leaner.findRegion("wait_back");
        Res.imgBackNewGame = new Img(v2);
        Res.imgBackNewGame.setSize(Util.getWidth(0f), Util.getHeight(0f));
        Res.imgBackNewGame.setPosition(Util.getLeft(0f), Util.getTop(0f, Res.imgBackNewGame.height));
        Res.imgBackNewGame.visible = false;
        v2 = new TextureRegion[10];
        v2[0] = Res.leaner.findRegion("additional/timer1");
        v2[1] = Res.leaner.findRegion("additional/timer2");
        v2[2] = Res.leaner.findRegion("additional/timer3");
        v2[3] = Res.leaner.findRegion("additional/timer4");
        v2[4] = Res.leaner.findRegion("additional/timer5");
        v2[5] = Res.leaner.findRegion("additional/timer6");
        v2[6] = Res.leaner.findRegion("additional/timer7");
        v2[7] = Res.leaner.findRegion("additional/timer8");
        v2[8] = Res.leaner.findRegion("additional/timer9");
        v2[9] = Res.leaner.findRegion("additional/timer10");
        Res.imgAdditionalTimer = new Img(v2);
        Img v0 = Res.imgAdditionalTimer;
        String[] v2_2 = new String[10];
        v2_2[0] = "1";
        v2_2[1] = "2";
        v2_2[2] = "3";
        v2_2[3] = "4";
        v2_2[4] = "5";
        v2_2[5] = "6";
        v2_2[6] = "7";
        v2_2[7] = "8";
        v2_2[8] = "9";
        v2_2[9] = "10";
        v0.setNames(v2_2);
        Res.imgAdditionalTimer.setSize(Util.getWidth(86f), Util.getHeight(173f));
        Res.imgAdditionalTimer.setPosition(Util.getLeft(633f), Util.getTop(683f, Res.imgAdditionalTimer.height));
        Res.imgAdditionalTimer.setImage("10");
        v4 = new TextureRegion[20];
        v4[0] = Res.leaner.findRegion("additional/img2000x2a");
        v4[1] = Res.leaner.findRegion("additional/img2000x2b");
        v4[2] = Res.leaner.findRegion("additional/img2000x4a");
        v4[3] = Res.leaner.findRegion("additional/img2000x4b");
        v4[4] = Res.leaner.findRegion("additional/img2000x8a");
        v4[5] = Res.leaner.findRegion("additional/img2000x8b");
        v4[6] = Res.leaner.findRegion("additional/img2000x16a");
        v4[7] = Res.leaner.findRegion("additional/img2000x16b");
        v4[8] = Res.leaner.findRegion("additional/img2000x50a");
        v4[9] = Res.leaner.findRegion("additional/img2000x50b");
        v4[10] = Res.leaner.findRegion("additional/img10000x2a");
        v4[11] = Res.leaner.findRegion("additional/img10000x2b");
        v4[12] = Res.leaner.findRegion("additional/img10000x4a");
        v4[13] = Res.leaner.findRegion("additional/img10000x4b");
        v4[14] = Res.leaner.findRegion("additional/img10000x8a");
        v4[15] = Res.leaner.findRegion("additional/img10000x8b");
        v4[16] = Res.leaner.findRegion("additional/img10000x16a");
        v4[17] = Res.leaner.findRegion("additional/img10000x16b");
        v4[18] = Res.leaner.findRegion("additional/img10000x50a");
        v4[19] = Res.leaner.findRegion("additional/img10000x50b");
        Res.aniBonus = new Ani(10, 2f, v4);
        Res.aniBonus.setPart(0, "2000x2", 0, 1f, new int[]{0, 1});
        Res.aniBonus.setPart(1, "2000x4", 2, 1f, new int[]{2, 3});
        Res.aniBonus.setPart(2, "2000x8", 4, 1f, new int[]{4, 5});
        Res.aniBonus.setPart(3, "2000x16", 6, 1f, new int[]{6, 7});
        Res.aniBonus.setPart(4, "2000x50", 8, 1f, new int[]{8, 9});
        Res.aniBonus.setPart(5, "10000x2", 10, 1f, new int[]{10, 11});
        Res.aniBonus.setPart(6, "10000x4", 12, 1f, new int[]{12, 13});
        Res.aniBonus.setPart(7, "10000x8", 14, 1f, new int[]{14, 15});
        Res.aniBonus.setPart(8, "10000x16", 16, 1f, new int[]{16, 17});
        Res.aniBonus.setPart(9, "10000x50", 16, 1f, new int[]{16, 17});
        Res.aniBonus.setSize(Util.getWidth(263f), Util.getHeight(115f));
        Res.aniBonus.setPosition(Util.getLeft(466f), Util.getTop(1022f, Res.aniBonus.height));
        v4 = new TextureRegion[94];
        v4[0] = Res.leaner.findRegion("lady/1/0");
        v4[1] = Res.leaner.findRegion("lady/1/1");
        v4[2] = Res.leaner.findRegion("lady/1/2");
        v4[3] = Res.leaner.findRegion("lady/1/3");
        v4[4] = Res.leaner.findRegion("lady/1/4");
        v4[5] = Res.leaner.findRegion("lady/1/5");
        v4[6] = Res.leaner.findRegion("lady/1/6");
        v4[7] = Res.leaner.findRegion("lady/1/7");
        v4[8] = Res.leaner.findRegion("lady/1/8");
        v4[9] = Res.leaner.findRegion("lady/1/9");
        v4[10] = Res.leaner.findRegion("lady/1/10");
        v4[11] = Res.leaner.findRegion("lady/1/11");
        v4[12] = Res.leaner.findRegion("lady/1/12");
        v4[13] = Res.leaner.findRegion("lady/1/13");
        v4[14] = Res.leaner.findRegion("lady/1/14");
        v4[15] = Res.leaner.findRegion("lady/1/15");
        v4[16] = Res.leaner.findRegion("lady/1/16");
        v4[17] = Res.leaner.findRegion("lady/1/17");
        v4[18] = Res.leaner.findRegion("lady/1/18");
        v4[19] = Res.leaner.findRegion("lady/1/19");
        v4[20] = Res.leaner.findRegion("lady/1/20");
        v4[21] = Res.leaner.findRegion("lady/1/21");
        v4[22] = Res.leaner.findRegion("lady/1/22");
        v4[23] = Res.leaner.findRegion("lady/1/23");
        v4[24] = Res.leaner.findRegion("lady/1/24");
        v4[25] = Res.leaner.findRegion("lady/2/0");
        v4[26] = Res.leaner.findRegion("lady/2/1");
        v4[27] = Res.leaner.findRegion("lady/2/2");
        v4[28] = Res.leaner.findRegion("lady/2/3");
        v4[29] = Res.leaner.findRegion("lady/2/4");
        v4[30] = Res.leaner.findRegion("lady/2/5");
        v4[31] = Res.leaner.findRegion("lady/2/6");
        v4[32] = Res.leaner.findRegion("lady/2/7");
        v4[33] = Res.leaner.findRegion("lady/2/8");
        v4[34] = Res.leaner.findRegion("lady/2/9");
        v4[35] = Res.leaner.findRegion("lady/2/10");
        v4[36] = Res.leaner.findRegion("lady/2/11");
        v4[37] = Res.leaner.findRegion("lady/2/12");
        v4[38] = Res.leaner.findRegion("lady/2/13");
        v4[39] = Res.leaner.findRegion("lady/2/14");
        v4[40] = Res.leaner.findRegion("lady/2/15");
        v4[41] = Res.leaner.findRegion("lady/2/16");
        v4[42] = Res.leaner.findRegion("lady/2/17");
        v4[43] = Res.leaner.findRegion("lady/2/18");
        v4[44] = Res.leaner.findRegion("lady/2/19");
        v4[45] = Res.leaner.findRegion("lady/2/20");
        v4[46] = Res.leaner.findRegion("lady/2/21");
        v4[47] = Res.leaner.findRegion("lady/2/22");
        v4[48] = Res.leaner.findRegion("lady/2/23");
        v4[49] = Res.leaner.findRegion("lady/2/24");
        v4[50] = Res.leaner.findRegion("lady/2/25");
        v4[51] = Res.leaner.findRegion("lady/2/26");
        v4[52] = Res.leaner.findRegion("lady/2/27");
        v4[53] = Res.leaner.findRegion("lady/2/28");
        v4[54] = Res.leaner.findRegion("lady/2/29");
        v4[55] = Res.leaner.findRegion("lady/2/30");
        v4[56] = Res.leaner.findRegion("lady/2/31");
        v4[57] = Res.leaner.findRegion("lady/2/32");
        v4[58] = Res.leaner.findRegion("lady/2/33");
        v4[59] = Res.leaner.findRegion("lady/2/34");
        v4[60] = Res.leaner.findRegion("lady/2/35");
        v4[61] = Res.leaner.findRegion("lady/3/0");
        v4[62] = Res.leaner.findRegion("lady/3/1");
        v4[63] = Res.leaner.findRegion("lady/3/2");
        v4[64] = Res.leaner.findRegion("lady/3/3");
        v4[65] = Res.leaner.findRegion("lady/3/4");
        v4[66] = Res.leaner.findRegion("lady/3/5");
        v4[67] = Res.leaner.findRegion("lady/3/6");
        v4[68] = Res.leaner.findRegion("lady/3/7");
        v4[69] = Res.leaner.findRegion("lady/3/8");
        v4[70] = Res.leaner.findRegion("lady/3/9");
        v4[71] = Res.leaner.findRegion("lady/3/10");
        v4[72] = Res.leaner.findRegion("lady/3/11");
        v4[73] = Res.leaner.findRegion("lady/3/12");
        v4[74] = Res.leaner.findRegion("lady/3/13");
        v4[75] = Res.leaner.findRegion("lady/3/14");
        v4[76] = Res.leaner.findRegion("lady/3/15");
        v4[77] = Res.leaner.findRegion("lady/3/16");
        v4[78] = Res.leaner.findRegion("lady/3/17");
        v4[79] = Res.leaner.findRegion("lady/3/18");
        v4[80] = Res.leaner.findRegion("lady/3/19");
        v4[81] = Res.leaner.findRegion("lady/3/20");
        v4[82] = Res.leaner.findRegion("lady/3/21");
        v4[83] = Res.leaner.findRegion("lady/3/22");
        v4[84] = Res.leaner.findRegion("lady/3/23");
        v4[85] = Res.leaner.findRegion("lady/3/24");
        v4[86] = Res.leaner.findRegion("lady/3/25");
        v4[87] = Res.leaner.findRegion("lady/3/26");
        v4[88] = Res.leaner.findRegion("lady/3/27");
        v4[89] = Res.leaner.findRegion("lady/3/28");
        v4[90] = Res.leaner.findRegion("lady/3/29");
        v4[91] = Res.leaner.findRegion("lady/3/30");
        v4[92] = Res.leaner.findRegion("lady/3/31");
        v4[93] = Res.leaner.findRegion("lady/3/32");
        Res.aniLady = new Ani(94, 2f, v4);
        Ani v0_1 = Res.aniLady;
        int[] v5 = new int[1];
        v5[0] = 0;
        v0_1.setPart(0, "a0", 0, 1f, v5);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 1;
        v2_1.setPart(1, "a1", 1, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 2;
        v2_1.setPart(2, "a2", 2, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 3;
        v2_1.setPart(3, "a3", 3, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 4;
        v2_1.setPart(4, "a4", 4, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 5;
        v2_1.setPart(5, "a5", 5, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 6;
        v2_1.setPart(6, "a6", 6, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 7;
        v2_1.setPart(7, "a7", 7, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 8;
        v2_1.setPart(8, "a8", 8, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 9;
        v2_1.setPart(9, "a9", 9, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 10;
        v2_1.setPart(10, "a10", 10, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 11;
        v2_1.setPart(11, "a11", 11, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 12;
        v2_1.setPart(12, "a12", 12, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 13;
        v2_1.setPart(13, "a13", 13, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 14;
        v2_1.setPart(14, "a14", 14, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 15;
        v2_1.setPart(15, "a15", 15, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 16;
        v2_1.setPart(16, "a16", 16, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 17;
        v2_1.setPart(17, "a17", 17, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 18;
        v2_1.setPart(18, "a18", 18, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 19;
        v2_1.setPart(19, "a19", 19, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 20;
        v2_1.setPart(20, "a20", 20, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 21;
        v2_1.setPart(21, "a21", 21, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 22;
        v2_1.setPart(22, "a22", 22, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 23;
        v2_1.setPart(23, "a23", 23, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 24;
        v2_1.setPart(24, "a24", 24, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 25;
        v2_1.setPart(25, "b0", 25, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 26;
        v2_1.setPart(26, "b1", 26, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 27;
        v2_1.setPart(27, "b2", 27, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 28;
        v2_1.setPart(28, "b3", 28, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 29;
        v2_1.setPart(29, "b4", 29, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 30;
        v2_1.setPart(30, "b5", 30, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 31;
        v2_1.setPart(31, "b6", 31, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 32;
        v2_1.setPart(32, "b7", 32, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 33;
        v2_1.setPart(33, "b8", 33, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 34;
        v2_1.setPart(34, "b9", 34, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 35;
        v2_1.setPart(35, "b10", 35, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 36;
        v2_1.setPart(36, "b11", 36, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 37;
        v2_1.setPart(37, "b12", 37, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 38;
        v2_1.setPart(38, "b13", 38, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 39;
        v2_1.setPart(39, "b14", 39, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 40;
        v2_1.setPart(40, "b15", 40, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 41;
        v2_1.setPart(41, "b16", 41, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 42;
        v2_1.setPart(42, "b17", 42, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 43;
        v2_1.setPart(43, "b18", 43, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 44;
        v2_1.setPart(44, "b19", 44, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 45;
        v2_1.setPart(45, "b20", 45, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 46;
        v2_1.setPart(46, "b21", 46, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 47;
        v2_1.setPart(47, "b22", 47, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 48;
        v2_1.setPart(48, "b23", 48, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 49;
        v2_1.setPart(49, "b24", 49, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 50;
        v2_1.setPart(50, "b25", 50, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 51;
        v2_1.setPart(51, "b26", 51, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 52;
        v2_1.setPart(52, "b27", 52, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 53;
        v2_1.setPart(53, "b28", 53, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 54;
        v2_1.setPart(54, "b29", 54, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 55;
        v2_1.setPart(55, "b30", 55, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 56;
        v2_1.setPart(56, "b31", 56, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 57;
        v2_1.setPart(57, "b32", 57, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 58;
        v2_1.setPart(58, "b33", 58, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 59;
        v2_1.setPart(59, "b34", 59, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 60;
        v2_1.setPart(60, "b35", 60, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 61;
        v2_1.setPart(61, "c0", 61, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 62;
        v2_1.setPart(62, "c1", 62, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 63;
        v2_1.setPart(63, "c2", 63, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 64;
        v2_1.setPart(64, "c3", 64, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 65;
        v2_1.setPart(65, "c4", 65, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 66;
        v2_1.setPart(66, "c5", 66, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 67;
        v2_1.setPart(67, "c6", 67, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 68;
        v2_1.setPart(68, "c7", 68, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 69;
        v2_1.setPart(69, "c8", 69, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 70;
        v2_1.setPart(70, "c9", 70, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 71;
        v2_1.setPart(71, "c10", 71, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 72;
        v2_1.setPart(72, "c11", 72, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 73;
        v2_1.setPart(73, "c12", 73, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 74;
        v2_1.setPart(74, "c13", 74, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 75;
        v2_1.setPart(75, "c14", 75, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 76;
        v2_1.setPart(76, "c15", 76, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 77;
        v2_1.setPart(77, "c16", 77, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 78;
        v2_1.setPart(78, "c17", 78, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 79;
        v2_1.setPart(79, "c18", 79, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 80;
        v2_1.setPart(80, "c19", 80, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 81;
        v2_1.setPart(81, "c20", 81, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 82;
        v2_1.setPart(82, "c21", 82, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 83;
        v2_1.setPart(83, "c22", 83, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 84;
        v2_1.setPart(84, "c23", 84, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 85;
        v2_1.setPart(85, "c24", 85, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 86;
        v2_1.setPart(86, "c25", 86, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 87;
        v2_1.setPart(87, "c26", 87, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 88;
        v2_1.setPart(88, "c27", 88, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 89;
        v2_1.setPart(89, "c28", 89, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 90;
        v2_1.setPart(90, "c29", 90, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 91;
        v2_1.setPart(91, "c30", 90, 1f, v7);
        v2_1 = Res.aniLady;
        v7 = new int[1];
        v7[0] = 92;
        v2_1.setPart(92, "c31", 91, 1f, v7);
        v0_1 = Res.aniLady;
        v5 = new int[1];
        v5[0] = 93;
        v0_1.setPart(93, "c32", 92, 1f, v5);
        Res.aniLady.setSize(Util.getWidth(484f), Util.getHeight(637f));
        Res.aniLady.setPosition(Util.getLeft(141f), Util.getTop(19f, Res.aniLady.height));
    }

    private static void iniBackground() {
        Res.rgBackground[0] = Res.leaner.findRegion("back0");
        Res.rgBackground[1] = Res.leaner.findRegion("back1");
        Res.bgGameTop1 = new Background();
        Res.bgGameTop1.setSize(Util.getWidth(1024f), Util.getHeight(562f));
        Res.bgGameTop1.setPosition(Util.getLeft(0f), Util.getTop(0f, Res.bgGameTop1.height));
        Res.bgGameTop1.nowIdx = 0;
        Res.bgGameTop2 = new Background();
        Res.bgGameTop2.setSize(Util.getWidth(1024f), Util.getHeight(562f));
        Res.bgGameTop2.setPosition(Util.getLeft(1024f), Util.getTop(0f, Res.bgGameTop2.height));
        Res.bgGameTop2.nowIdx = 1;
        Res.bgGameBottom1 = new Background();
        Res.bgGameBottom1.setSize(Util.getWidth(1024f), Util.getHeight(562f));
        Res.bgGameBottom1.setPosition(Util.getLeft(0f), Util.getTop(640f, Res.bgGameBottom1.height));
        Res.bgGameBottom1.nowIdx = 0;
        Res.bgGameBottom2 = new Background();
        Res.bgGameBottom2.setSize(Util.getWidth(1024f), Util.getHeight(562f));
        Res.bgGameBottom2.setPosition(Util.getLeft(1024f), Util.getTop(640f, Res.bgGameBottom2.height));
        Res.bgGameBottom2.nowIdx = 1;
        TextureRegion[] v2 = new TextureRegion[4];
        v2[0] = Res.leaner.findRegion("inter_normal");
        v2[1] = Res.leaner.findRegion("inter_red");
        v2[2] = Res.leaner.findRegion("inter_normal_chat");
        v2[3] = Res.leaner.findRegion("inter_red_chat");
        Res.imgInter = new Img(v2);
        Res.imgInter.setSize(Util.getWidth(768f), Util.getHeight(256f));
        Res.imgInter.setPosition(Util.getLeft(0f), Util.getTop(547f, Res.imgInter.height));
        Img v0 = Res.imgInter;
        String[] v2_1 = new String[4];
        v2_1[0] = "normal";
        v2_1[1] = "red";
        v2_1[2] = "normal_chat";
        v2_1[3] = "red_chat";
        v0.setNames(v2_1);
        Res.imgInter.setImage("normal_chat");
        v2 = new TextureRegion[2];
        v2[0] = Res.leaner.findRegion("inter_bottom_normal");
        v2[1] = Res.leaner.findRegion("inter_bottom_red");
        Res.imgInterBottom = new Img(v2);
        Res.imgInterBottom.setSize(Util.getWidth(768f), Util.getHeight(221f));
        Res.imgInterBottom.setPosition(Util.getLeft(0f), Util.getTop(1059f, Res.imgInterBottom.height));
        v0 = Res.imgInterBottom;
        v2_1 = new String[2];
        v2_1[0] = "normal";
        v2_1[1] = "red";
        v0.setNames(v2_1);
        Res.imgInterBottom.setImage("normal");
        v2 = new TextureRegion[2];
        v2[0] = Res.leaner.findRegion("inter_left_normal");
        v2[1] = Res.leaner.findRegion("inter_left_red");
        Res.imgInterLeft = new Img(v2);
        Res.imgInterLeft.setSize(Util.getWidth(64f), Util.getHeight(256f));
        Res.imgInterLeft.setPosition(Util.getLeft(0f), Util.getTop(803f, Res.imgInterLeft.height));
        v0 = Res.imgInterLeft;
        v2_1 = new String[2];
        v2_1[0] = "normal";
        v2_1[1] = "red";
        v0.setNames(v2_1);
        Res.imgInterLeft.setImage("normal");
        v2 = new TextureRegion[2];
        v2[0] = Res.leaner.findRegion("inter_right_normal");
        v2[1] = Res.leaner.findRegion("inter_right_red");
        Res.imgInterRight = new Img(v2);
        Res.imgInterRight.setSize(Util.getWidth(64f), Util.getHeight(256f));
        Res.imgInterRight.setPosition(Util.getLeft(704f), Util.getTop(803f, Res.imgInterRight.height));
        v0 = Res.imgInterRight;
        v2_1 = new String[2];
        v2_1[0] = "normal";
        v2_1[1] = "red";
        v0.setNames(v2_1);
        Res.imgInterRight.setImage("normal");
        v2 = new TextureRegion[1];
        v2[0] = Res.leaner.findRegion("wintabletop");
        Res.imgWinTableTop1 = new Img(v2);
        Res.imgWinTableTop1.setSize(Util.getWidth(1024f), Util.getHeight(50f));
        Res.imgWinTableTop1.setPosition(Util.getLeft(0f), Util.getTop(566f, Res.imgWinTableTop1.height));
        v2 = new TextureRegion[1];
        v2[0] = Res.leaner.findRegion("wintabletop");
        Res.imgWinTableTop2 = new Img(v2);
        Res.imgWinTableTop2.setSize(Util.getWidth(1024f), Util.getHeight(50f));
        Res.imgWinTableTop2.setPosition(Util.getLeft(1024f), Util.getTop(566f, Res.imgWinTableTop2.height));
        v2 = new TextureRegion[1];
        v2[0] = Res.leaner.findRegion("wintablebottom");
        Res.imgWinTableBottom1 = new Img(v2);
        Res.imgWinTableBottom1.setSize(Util.getWidth(1024f), Util.getHeight(60f));
        Res.imgWinTableBottom1.setPosition(Util.getLeft(0f), Util.getTop(636f, Res.imgWinTableBottom1.height));
        v2 = new TextureRegion[1];
        v2[0] = Res.leaner.findRegion("wintablebottom");
        Res.imgWinTableBottom2 = new Img(v2);
        Res.imgWinTableBottom2.setSize(Util.getWidth(1024f), Util.getHeight(60f));
        Res.imgWinTableBottom2.setPosition(Util.getLeft(1024f), Util.getTop(636f, Res.imgWinTableBottom2.height));
        TextureRegion[] v3 = new TextureRegion[6];
        v3[0] = Res.leaner.findRegion("post_left0");
        v3[1] = Res.leaner.findRegion("post_left1");
        v3[2] = Res.leaner.findRegion("post_left2");
        v3[3] = Res.leaner.findRegion("post_left3");
        v3[4] = Res.leaner.findRegion("post_left4");
        v3[5] = Res.leaner.findRegion("post_left5");
        Res.aniPostLeft = new Ani(6, 1f, v3);
        Ani v0_1 = Res.aniPostLeft;
        int[] v5 = new int[1];
        v5[0] = 0;
        v0_1.setPart(0, "0", 0, 1f, v5);
        Ani v5_1 = Res.aniPostLeft;
        int[] v10 = new int[1];
        v10[0] = 1;
        v5_1.setPart(1, "1000", 1, 1f, v10);
        Ani v7 = Res.aniPostLeft;
        int[] v12 = new int[1];
        v12[0] = 2;
        v7.setPart(2, "2000", 2, 1f, v12);
        v7 = Res.aniPostLeft;
        v12 = new int[1];
        v12[0] = 3;
        v7.setPart(3, "3000", 3, 1f, v12);
        v7 = Res.aniPostLeft;
        v12 = new int[1];
        v12[0] = 4;
        v7.setPart(4, "4000", 4, 1f, v12);
        Res.aniPostLeft.setPart(5, "5000", 0, 0.2f, new int[]{5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 4, 3, 2, 1, 0});
        Res.aniPostLeft.setSize(Util.getWidth(203f), Util.getHeight(512f));
        Res.aniPostLeft.setPosition(Util.getLeft(0f), Util.getTop(0f, Res.aniPostLeft.height));
        Res.aniPostLeft.play(true, "0");
        v3 = new TextureRegion[6];
        v3[0] = Res.leaner.findRegion("post_right0");
        v3[1] = Res.leaner.findRegion("post_right1");
        v3[2] = Res.leaner.findRegion("post_right2");
        v3[3] = Res.leaner.findRegion("post_right3");
        v3[4] = Res.leaner.findRegion("post_right4");
        v3[5] = Res.leaner.findRegion("post_right5");
        Res.aniPostRight = new Ani(6, 1f, v3);
        v0_1 = Res.aniPostRight;
        v5 = new int[1];
        v5[0] = 0;
        v0_1.setPart(0, "0", 0, 1f, v5);
        v5_1 = Res.aniPostRight;
        v10 = new int[1];
        v10[0] = 1;
        v5_1.setPart(1, "1000", 1, 1f, v10);
        v7 = Res.aniPostRight;
        v12 = new int[1];
        v12[0] = 2;
        v7.setPart(2, "2000", 2, 1f, v12);
        v7 = Res.aniPostRight;
        v12 = new int[1];
        v12[0] = 3;
        v7.setPart(3, "3000", 3, 1f, v12);
        v7 = Res.aniPostRight;
        v12 = new int[1];
        v12[0] = 4;
        v7.setPart(4, "4000", 4, 1f, v12);
        Res.aniPostRight.setPart(5, "5000", 0, 0.2f, new int[]{5, 4, 3, 2, 1, 0, 1, 2, 3, 4, 5, 4, 3, 2, 1, 0});
        Res.aniPostRight.setSize(Util.getWidth(203f), Util.getHeight(512f));
        Res.aniPostRight.setPosition(Util.getLeft(565f), Util.getTop(0f, Res.aniPostRight.height));
        Res.aniPostRight.play(true, "0");
        v2 = new TextureRegion[2];
        v2[0] = Res.leaner.findRegion("dropper0");
        v2[1] = Res.leaner.findRegion("dropper1");
        Res.aniDropper = new Ani(2, 1f, v2);
        Res.aniDropper.setSize(Util.getWidth(250f), Util.getHeight(84f));
        v0_1 = Res.aniDropper;
        v5 = new int[1];
        v5[0] = 0;
        v0_1.setPart(0, "1", 0, 1f, v5);
        Res.aniDropper.setPart(1, "2", 0, 0.1f, new int[]{0, 1});
        Res.aniDropper.setPosition(Util.getLeft(50f), Util.getTop(0f, Res.aniDropper.height));
        Res.aniDropper.play(true, "2", 20);
        v2 = new TextureRegion[1];
        v2[0] = Res.leaner.findRegion("back_menu1");
        Res.imgBackMenu1 = new Img(v2);
        Res.imgBackMenu1.setSize(Util.getWidth(768f), Util.getHeight(1024f));
        Res.imgBackMenu1.setPosition(Util.getLeft(0f), Util.getTop(0f, Res.imgBackMenu1.height));
        v2 = new TextureRegion[1];
        v2[0] = Res.leaner.findRegion("back_menu2");
        Res.imgBackMenu2 = new Img(v2);
        Res.imgBackMenu2.setSize(Util.getWidth(768f), Util.getHeight(256f));
        Res.imgBackMenu2.setPosition(Util.getLeft(0f), Util.getTop(1024f, Res.imgBackMenu2.height));
        v3 = new TextureRegion[2];
        v3[0] = Res.leaner.findRegion("back_reserve1");
        v3[1] = Res.leaner.findRegion("back_reserve2");
        Res.aniReserveBack = new Ani(1, 0.7f, v3);
        Res.aniReserveBack.setSize(Util.getWidth(650f), Util.getHeight(338f));
        Res.aniReserveBack.setPosition(Util.XCenter(394f, Res.aniReserveBack.width), Util.YCenter(243f, Res.aniReserveBack.height));
        Res.aniReserveBack.play(true);
        Res.aniReserveBack.visible = false;
        v2 = new TextureRegion[1];
        v2[0] = Res.leaner.findRegion("wait_back");
        Res.imgChatBack = new Img(v2);
        Res.imgChatBack.setSize(Util.getWidth(630f), Util.getHeight(336f));
        Res.imgChatBack.setPosition(Util.getLeft(64f), Util.getTop(781f, Res.imgChatBack.height));
        v2 = new TextureRegion[1];
        v2[0] = Res.leaner.findRegion("back_gage");
        Res.imgGageBack = new Img(v2);
        Res.imgGageBack.setSize(Util.getWidth(145f), Util.getHeight(226f));
        Res.imgGageBack.setPosition(Util.getLeft(655f), Util.getTop(204f, Res.imgGageBack.height));
        v2 = new TextureRegion[1];
        v2[0] = Res.leaner.findRegion("black50");
        Res.imgDayNight = new Img(v2);
        Res.imgDayNight.setSize(Util.getWidth(768f), Util.getHeight(1280f));
        Res.imgDayNight.setPosition(Util.getLeft(0f), Util.getTop(0f, Res.imgDayNight.height));
        Res.imgDayNight.visible = false;
        v3 = new TextureRegion[2];
        v3[0] = Res.leaner.findRegion("back_no1");
        v3[1] = Res.leaner.findRegion("back_no2");
        Res.aniBackNo = new Ani(0, 0.1f, v3);
        Res.aniBackNo.setSize(Util.getWidth(30f), Util.getHeight(20f));
        Res.aniBackNo.setPosition(Util.getLeft(305f), Util.getTop(1169f, Res.aniBackNo.height));
        Res.aniBackNo.play(true, 20);
        v3 = new TextureRegion[2];
        v3[0] = Res.leaner.findRegion("back_gift1");
        v3[1] = Res.leaner.findRegion("back_gift2");
        Res.aniBackGift = new Ani(0, 0.1f, v3);
        Res.aniBackGift.setSize(Util.getWidth(45f), Util.getHeight(21f));
        Res.aniBackGift.setPosition(Util.getLeft(565f), Util.getTop(1211f, Res.aniBackGift.height));
        Res.aniBackGift.play(true, 20);
        v3 = new TextureRegion[2];
        v3[0] = Res.leaner.findRegion("back_spin1");
        v3[1] = Res.leaner.findRegion("back_spin2");
        Res.aniBackSpin = new Ani(0, 0.1f, v3);
        Res.aniBackSpin.setSize(Util.getWidth(46f), Util.getHeight(21f));
        Res.aniBackSpin.setPosition(Util.getLeft(39f), Util.getTop(1211f, Res.aniBackSpin.height));
        Res.aniBackSpin.play(true, 20);
        v3 = new TextureRegion[2];
        v3[0] = Res.leaner.findRegion("back_money1");
        v3[1] = Res.leaner.findRegion("back_money2");
        Res.aniBackMoney = new Ani(0, 0.1f, v3);
        Res.aniBackMoney.setSize(Util.getWidth(70f), Util.getHeight(20f));
        Res.aniBackMoney.setPosition(Util.getLeft(266f), Util.getTop(1223f, Res.aniBackMoney.height));
        Res.aniBackMoney.play(true, 20);
    }

    private static void iniBubble() {
        Res.rgBubble[0] = Res.leaner.findRegion("fish/bubble0");
        Res.rgBubble[1] = Res.leaner.findRegion("fish/bubble1");
        Res.rgBubble[2] = Res.leaner.findRegion("fish/bubble2");
        Res.rgBubble[3] = Res.leaner.findRegion("fish/bubble3");
        Res.rgBubble[4] = Res.leaner.findRegion("fish/bubble4");
        Res.rgBubble[5] = Res.leaner.findRegion("fish/bubble5");
        Res.rgBubble[6] = Res.leaner.findRegion("fish/bubble6");
        Res.rgBubble[7] = Res.leaner.findRegion("fish/bubble7");
        Res.rgBubble[8] = Res.leaner.findRegion("fish/bubble8");
        Res.rgBubble[9] = Res.leaner.findRegion("fish/bubble9");
        Res.rgBubble[10] = Res.leaner.findRegion("fish/bubble10");
        Res.rgBubble[11] = Res.leaner.findRegion("fish/bubble11");
        Res.rgBubble[12] = Res.leaner.findRegion("fish/bubble12");
        Res.rgBubble[13] = Res.leaner.findRegion("fish/bubble13");
        Res.rgBubble[14] = Res.leaner.findRegion("fish/bubble14");
        Res.rgBubble[15] = Res.leaner.findRegion("fish/bubble15");
        Res.rgBubble[16] = Res.leaner.findRegion("fish/bubble16");
        Res.rgBubble[17] = Res.leaner.findRegion("fish/bubble17");
        Res.rgBubble[18] = Res.leaner.findRegion("fish/bubble18");
        Res.rgBubble[19] = Res.leaner.findRegion("fish/bubble19");
        Res.rgBubble[20] = Res.leaner.findRegion("fish/bubble20");
        Res.rgBubble[21] = Res.leaner.findRegion("fish/bubble21");
        Res.rgBubble[22] = Res.leaner.findRegion("fish/bubble22");
        Res.rgBubble[23] = Res.leaner.findRegion("fish/bubble23");
        Res.rgBubble[24] = Res.leaner.findRegion("fish/bubble24");
        Res.rgBubble[25] = Res.leaner.findRegion("fish/bubble25");
        Res.rgBubble[26] = Res.leaner.findRegion("fish/bubble26");
        Res.rgBubble[27] = Res.leaner.findRegion("fish/bubble27");
        Res.rgBubble[28] = Res.leaner.findRegion("fish/bubble28");
        Res.rgBubble[29] = Res.leaner.findRegion("fish/bubble29");
        Res.rgBubble[30] = Res.leaner.findRegion("fish/bubble30");
        Res.rgBubble[31] = Res.leaner.findRegion("fish/bubble31");
        Res.rgBubble[32] = Res.leaner.findRegion("fish/bubble32");
        Res.rgBubble[33] = Res.leaner.findRegion("fish/bubble33");
        Res.rgBubble[34] = Res.leaner.findRegion("fish/bubble34");
        Res.rgBubble[35] = Res.leaner.findRegion("fish/bubble35");
        Res.rgBubble[36] = Res.leaner.findRegion("fish/bubble36");
        Res.rgBubble[37] = Res.leaner.findRegion("fish/bubble37");
        Res.rgBubble[38] = Res.leaner.findRegion("fish/bubble38");
        Res.rgBubble[39] = Res.leaner.findRegion("fish/bubble39");
        Res.bubbleLeft = new Bubble(3, 0.1f, 40);
        Res.bubbleLeft.setSize(Util.getWidth(90f), Util.getHeight(440f));
        Res.bubbleLeft.setPosition(Util.getLeft(0f), Util.getTop(106f, Res.bubbleLeft.height));
        Res.bubbleLeft.setPart(0, "1", 0, 0.1f, new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29, 20, 31, 32, 33, 34, 35, 36, 37, 38, 39});
        Res.bubbleLeft.play(true, "1");
        Res.bubbleRight = new Bubble(3, 0.1f, 40);
        Res.bubbleRight.setSize(Util.getWidth(90f), Util.getHeight(440f));
        Res.bubbleRight.setPosition(Util.getLeft(678f), Util.getTop(106f, Res.bubbleRight.height));
        Res.bubbleRight.setPart(0, "1", 0, 0.1f, new int[]{0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 20, 31, 32, 33, 34, 35, 36, 37, 38, 39});
        Res.bubbleRight.play(true, "1");
        Res.bubbleCenter1 = new Bubble(3, 0.1f, 40);
        Res.bubbleCenter1.setSize(Util.getWidth(90f), Util.getHeight(440f));
        Res.bubbleCenter1.setPosition(Util.getLeft(200f), Util.getTop(106f, Res.bubbleCenter1.height));
        Res.bubbleCenter1.setPart(0, "1", 0, 0.1f, new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 29, 20, 31, 32, 33, 34, 35, 36, 37, 38, 39});
        Res.bubbleCenter1.play(true, "1", 1);
        Res.bubbleCenter2 = new Bubble(3, 0.1f, 40);
        Res.bubbleCenter2.setSize(Util.getWidth(90f), Util.getHeight(440f));
        Res.bubbleCenter2.setPosition(Util.getLeft(400f), Util.getTop(106f, Res.bubbleCenter2.height));
        Res.bubbleCenter2.setPart(0, "1", 0, 0.1f, new int[]{0, 0, 0, 0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 29, 20, 31, 32, 33, 34, 35, 36, 37, 38, 39});
        Res.bubbleCenter2.play(true, "1", 1);
    }

    private static void iniButtons() {
        TextureRegion[] v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("btn_coin");
        Res.btnCoin = new Img(v1);
        Res.btnCoin.setSize(Util.getWidth(77f), Util.getHeight(89f));
        Res.btnCoin.setPosition(Util.getLeft(13f), Util.getTop(587f, Res.btnCoin.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("btn_menu1");
        Res.btnMenu = new Ani(0, 1f, v1);
        Res.btnMenu.setSize(Util.getWidth(108f), Util.getHeight(34f));
        Res.btnMenu.setPosition(Util.getLeft(33f), Util.getTop(1149f, Res.btnMenu.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("btn_change1");
        Res.btnSwitch = new Img(v1);
        Res.btnSwitch.setSize(Util.getWidth(205f), Util.getHeight(34f));
        Res.btnSwitch.setPosition(Util.getLeft(532f), Util.getTop(1149f, Res.btnSwitch.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("btn_reserve1");
        Res.btnReserve = new Ani(0, 1f, v1);
        Res.btnReserve.setSize(Util.getWidth(105f), Util.getHeight(34f));
        Res.btnReserve.setPosition(Util.getLeft(135f), Util.getTop(1149f, Res.btnReserve.height));
    }

    private static void iniCardBaseLine() {
        Res.iBaseLinePixelX1 = 162f;
        Res.iBaseLinePixelX2 = 310f;
        Res.iBaseLinePixelX3 = 458f;
        Res.iBaseLinePixelX4 = 606f;
        Res.iBaseLinePixelY5 = 738f;
        Res.iBaseLinePixelY4 = 840f;
        Res.iBaseLinePixelY3 = 942f;
        Res.iBaseLinePixelY2 = 1044f;
        Res.iBaseLinePixelY1 = 1146f;
        Res.iBaseLinePixelY0 = 1248f;
        Res.fBaseLineY5 = Util.YCenter(Res.iBaseLinePixelY5, 0f);
        Res.fBaseLineY4 = Util.YCenter(Res.iBaseLinePixelY4, 0f);
        Res.fBaseLineY3 = Util.YCenter(Res.iBaseLinePixelY3, 0f);
        Res.fBaseLineY2 = Util.YCenter(Res.iBaseLinePixelY2, 0f);
        Res.fBaseLineY1 = Util.YCenter(Res.iBaseLinePixelY1, 0f);
        Res.fBaseLineY0 = Util.YCenter(Res.iBaseLinePixelY0, 0f);
    }

    private static void iniCards() {
        Res.rgCard = new TextureRegion[235];
        Res.rgCard[0] = Res.leaner.findRegion("obj/m0");
        Res.rgCard[1] = Res.leaner.findRegion("obj/m1");
        Res.rgCard[2] = Res.leaner.findRegion("obj/m2");
        Res.rgCard[3] = Res.leaner.findRegion("obj/m3");
        Res.rgCard[4] = Res.leaner.findRegion("obj/m4");
        Res.rgCard[5] = Res.leaner.findRegion("obj/mm0");
        Res.rgCard[6] = Res.leaner.findRegion("obj/mm1");
        Res.rgCard[7] = Res.leaner.findRegion("obj/mm2");
        Res.rgCard[8] = Res.leaner.findRegion("obj/mm3");
        Res.rgCard[9] = Res.leaner.findRegion("obj/mm4");
        Res.rgCard[10] = Res.leaner.findRegion("obj/mm5");
        Res.rgCard[11] = Res.leaner.findRegion("obj/mm6");
        Res.rgCard[12] = Res.leaner.findRegion("obj/mm7");
        Res.rgCard[13] = Res.leaner.findRegion("obj/mm8");
        Res.rgCard[14] = Res.leaner.findRegion("obj/mm9");
        Res.rgCard[15] = Res.leaner.findRegion("obj/mm10");
        Res.rgCard[16] = Res.leaner.findRegion("obj/mm11");
        Res.rgCard[17] = Res.leaner.findRegion("obj/f0");
        Res.rgCard[18] = Res.leaner.findRegion("obj/f1");
        Res.rgCard[19] = Res.leaner.findRegion("obj/f2");
        Res.rgCard[20] = Res.leaner.findRegion("obj/f3");
        Res.rgCard[21] = Res.leaner.findRegion("obj/f4");
        Res.rgCard[22] = Res.leaner.findRegion("obj/ff0");
        Res.rgCard[23] = Res.leaner.findRegion("obj/ff1");
        Res.rgCard[24] = Res.leaner.findRegion("obj/ff2");
        Res.rgCard[25] = Res.leaner.findRegion("obj/ff3");
        Res.rgCard[26] = Res.leaner.findRegion("obj/ff4");
        Res.rgCard[27] = Res.leaner.findRegion("obj/ff5");
        Res.rgCard[28] = Res.leaner.findRegion("obj/ff6");
        Res.rgCard[29] = Res.leaner.findRegion("obj/ff7");
        Res.rgCard[30] = Res.leaner.findRegion("obj/ff8");
        Res.rgCard[31] = Res.leaner.findRegion("obj/ff9");
        Res.rgCard[32] = Res.leaner.findRegion("obj/ff10");
        Res.rgCard[33] = Res.leaner.findRegion("obj/ff11");
        Res.rgCard[34] = Res.leaner.findRegion("obj/o0");
        Res.rgCard[35] = Res.leaner.findRegion("obj/o1");
        Res.rgCard[36] = Res.leaner.findRegion("obj/o2");
        Res.rgCard[37] = Res.leaner.findRegion("obj/o3");
        Res.rgCard[38] = Res.leaner.findRegion("obj/o4");
        Res.rgCard[39] = Res.leaner.findRegion("obj/oo0");
        Res.rgCard[40] = Res.leaner.findRegion("obj/oo1");
        Res.rgCard[41] = Res.leaner.findRegion("obj/oo2");
        Res.rgCard[42] = Res.leaner.findRegion("obj/oo3");
        Res.rgCard[43] = Res.leaner.findRegion("obj/oo4");
        Res.rgCard[44] = Res.leaner.findRegion("obj/oo5");
        Res.rgCard[45] = Res.leaner.findRegion("obj/oo6");
        Res.rgCard[46] = Res.leaner.findRegion("obj/oo7");
        Res.rgCard[47] = Res.leaner.findRegion("obj/oo8");
        Res.rgCard[48] = Res.leaner.findRegion("obj/oo9");
        Res.rgCard[49] = Res.leaner.findRegion("obj/oo10");
        Res.rgCard[50] = Res.leaner.findRegion("obj/oo11");
        Res.rgCard[51] = Res.leaner.findRegion("obj/g0");
        Res.rgCard[52] = Res.leaner.findRegion("obj/g1");
        Res.rgCard[53] = Res.leaner.findRegion("obj/g2");
        Res.rgCard[54] = Res.leaner.findRegion("obj/g3");
        Res.rgCard[55] = Res.leaner.findRegion("obj/g4");
        Res.rgCard[56] = Res.leaner.findRegion("obj/gg0");
        Res.rgCard[57] = Res.leaner.findRegion("obj/gg1");
        Res.rgCard[58] = Res.leaner.findRegion("obj/gg2");
        Res.rgCard[59] = Res.leaner.findRegion("obj/gg3");
        Res.rgCard[60] = Res.leaner.findRegion("obj/gg4");
        Res.rgCard[61] = Res.leaner.findRegion("obj/gg5");
        Res.rgCard[62] = Res.leaner.findRegion("obj/gg6");
        Res.rgCard[63] = Res.leaner.findRegion("obj/gg7");
        Res.rgCard[64] = Res.leaner.findRegion("obj/gg8");
        Res.rgCard[65] = Res.leaner.findRegion("obj/gg9");
        Res.rgCard[66] = Res.leaner.findRegion("obj/gg10");
        Res.rgCard[67] = Res.leaner.findRegion("obj/gg11");
        Res.rgCard[68] = Res.leaner.findRegion("obj/ggg0");
        Res.rgCard[69] = Res.leaner.findRegion("obj/ggg1");
        Res.rgCard[70] = Res.leaner.findRegion("obj/ggg2");
        Res.rgCard[71] = Res.leaner.findRegion("obj/ggg3");
        Res.rgCard[72] = Res.leaner.findRegion("obj/ggg4");
        Res.rgCard[73] = Res.leaner.findRegion("obj/ggg5");
        Res.rgCard[74] = Res.leaner.findRegion("obj/ggg6");
        Res.rgCard[75] = Res.leaner.findRegion("obj/ggg7");
        Res.rgCard[76] = Res.leaner.findRegion("obj/ggg8");
        Res.rgCard[77] = Res.leaner.findRegion("obj/ggg9");
        Res.rgCard[78] = Res.leaner.findRegion("obj/ggg10");
        Res.rgCard[79] = Res.leaner.findRegion("obj/ggg11");
        Res.rgCard[80] = Res.leaner.findRegion("obj/h0");
        Res.rgCard[81] = Res.leaner.findRegion("obj/h1");
        Res.rgCard[82] = Res.leaner.findRegion("obj/h2");
        Res.rgCard[83] = Res.leaner.findRegion("obj/h3");
        Res.rgCard[84] = Res.leaner.findRegion("obj/h4");
        Res.rgCard[85] = Res.leaner.findRegion("obj/hh0");
        Res.rgCard[86] = Res.leaner.findRegion("obj/hh1");
        Res.rgCard[87] = Res.leaner.findRegion("obj/hh2");
        Res.rgCard[88] = Res.leaner.findRegion("obj/hh3");
        Res.rgCard[89] = Res.leaner.findRegion("obj/hh4");
        Res.rgCard[90] = Res.leaner.findRegion("obj/hh5");
        Res.rgCard[91] = Res.leaner.findRegion("obj/hh6");
        Res.rgCard[92] = Res.leaner.findRegion("obj/hh7");
        Res.rgCard[93] = Res.leaner.findRegion("obj/hh8");
        Res.rgCard[94] = Res.leaner.findRegion("obj/hh9");
        Res.rgCard[95] = Res.leaner.findRegion("obj/hh10");
        Res.rgCard[96] = Res.leaner.findRegion("obj/hh11");
        Res.rgCard[97] = Res.leaner.findRegion("obj/c0");
        Res.rgCard[98] = Res.leaner.findRegion("obj/c1");
        Res.rgCard[99] = Res.leaner.findRegion("obj/c2");
        Res.rgCard[100] = Res.leaner.findRegion("obj/c3");
        Res.rgCard[101] = Res.leaner.findRegion("obj/c4");
        Res.rgCard[102] = Res.leaner.findRegion("obj/cc0");
        Res.rgCard[103] = Res.leaner.findRegion("obj/cc1");
        Res.rgCard[104] = Res.leaner.findRegion("obj/cc2");
        Res.rgCard[105] = Res.leaner.findRegion("obj/cc3");
        Res.rgCard[106] = Res.leaner.findRegion("obj/cc4");
        Res.rgCard[107] = Res.leaner.findRegion("obj/cc5");
        Res.rgCard[108] = Res.leaner.findRegion("obj/cc6");
        Res.rgCard[109] = Res.leaner.findRegion("obj/cc7");
        Res.rgCard[110] = Res.leaner.findRegion("obj/cc8");
        Res.rgCard[111] = Res.leaner.findRegion("obj/cc9");
        Res.rgCard[112] = Res.leaner.findRegion("obj/cc10");
        Res.rgCard[113] = Res.leaner.findRegion("obj/cc11");
        Res.rgCard[114] = Res.leaner.findRegion("obj/ccc0");
        Res.rgCard[115] = Res.leaner.findRegion("obj/ccc1");
        Res.rgCard[116] = Res.leaner.findRegion("obj/ccc2");
        Res.rgCard[117] = Res.leaner.findRegion("obj/ccc3");
        Res.rgCard[118] = Res.leaner.findRegion("obj/ccc4");
        Res.rgCard[119] = Res.leaner.findRegion("obj/ccc5");
        Res.rgCard[120] = Res.leaner.findRegion("obj/ccc6");
        Res.rgCard[121] = Res.leaner.findRegion("obj/ccc7");
        Res.rgCard[122] = Res.leaner.findRegion("obj/ccc8");
        Res.rgCard[123] = Res.leaner.findRegion("obj/ccc9");
        Res.rgCard[124] = Res.leaner.findRegion("obj/ccc10");
        Res.rgCard[125] = Res.leaner.findRegion("obj/ccc11");
        Res.rgCard[126] = Res.leaner.findRegion("obj/ccc12");
        Res.rgCard[127] = Res.leaner.findRegion("obj/ccc13");
        Res.rgCard[128] = Res.leaner.findRegion("obj/ccc14");
        Res.rgCard[129] = Res.leaner.findRegion("obj/ccc15");
        Res.rgCard[130] = Res.leaner.findRegion("obj/ccc16");
        Res.rgCard[131] = Res.leaner.findRegion("obj/ccc17");
        Res.rgCard[132] = Res.leaner.findRegion("obj/ccc18");
        Res.rgCard[133] = Res.leaner.findRegion("obj/ccc19");
        Res.rgCard[134] = Res.leaner.findRegion("obj/ccc20");
        Res.rgCard[135] = Res.leaner.findRegion("obj/ccc21");
        Res.rgCard[136] = Res.leaner.findRegion("obj/ccc22");
        Res.rgCard[137] = Res.leaner.findRegion("obj/ccc23");
        Res.rgCard[138] = Res.leaner.findRegion("obj/ccc24");
        Res.rgCard[139] = Res.leaner.findRegion("obj/ccc25");
        Res.rgCard[140] = Res.leaner.findRegion("obj/cccc0");
        Res.rgCard[141] = Res.leaner.findRegion("obj/cccc1");
        Res.rgCard[142] = Res.leaner.findRegion("obj/cccc2");
        Res.rgCard[143] = Res.leaner.findRegion("obj/cccc3");
        Res.rgCard[144] = Res.leaner.findRegion("obj/cccc4");
        Res.rgCard[145] = Res.leaner.findRegion("obj/cccc5");
        Res.rgCard[146] = Res.leaner.findRegion("obj/cccc6");
        Res.rgCard[147] = Res.leaner.findRegion("obj/cccc7");
        Res.rgCard[148] = Res.leaner.findRegion("obj/cccc8");
        Res.rgCard[149] = Res.leaner.findRegion("obj/cccc9");
        Res.rgCard[150] = Res.leaner.findRegion("obj/t0");
        Res.rgCard[151] = Res.leaner.findRegion("obj/t1");
        Res.rgCard[152] = Res.leaner.findRegion("obj/t2");
        Res.rgCard[153] = Res.leaner.findRegion("obj/t3");
        Res.rgCard[154] = Res.leaner.findRegion("obj/t4");
        Res.rgCard[155] = Res.leaner.findRegion("obj/tt0");
        Res.rgCard[156] = Res.leaner.findRegion("obj/tt1");
        Res.rgCard[157] = Res.leaner.findRegion("obj/tt2");
        Res.rgCard[158] = Res.leaner.findRegion("obj/tt3");
        Res.rgCard[159] = Res.leaner.findRegion("obj/tt4");
        Res.rgCard[160] = Res.leaner.findRegion("obj/tt5");
        Res.rgCard[161] = Res.leaner.findRegion("obj/tt6");
        Res.rgCard[162] = Res.leaner.findRegion("obj/tt7");
        Res.rgCard[163] = Res.leaner.findRegion("obj/tt8");
        Res.rgCard[164] = Res.leaner.findRegion("obj/tt9");
        Res.rgCard[165] = Res.leaner.findRegion("obj/tt10");
        Res.rgCard[166] = Res.leaner.findRegion("obj/tt11");
        Res.rgCard[167] = Res.leaner.findRegion("obj/s0");
        Res.rgCard[168] = Res.leaner.findRegion("obj/s1");
        Res.rgCard[169] = Res.leaner.findRegion("obj/s2");
        Res.rgCard[170] = Res.leaner.findRegion("obj/s3");
        Res.rgCard[171] = Res.leaner.findRegion("obj/s4");
        Res.rgCard[172] = Res.leaner.findRegion("obj/ss0");
        Res.rgCard[173] = Res.leaner.findRegion("obj/ss1");
        Res.rgCard[174] = Res.leaner.findRegion("obj/ss2");
        Res.rgCard[175] = Res.leaner.findRegion("obj/ss3");
        Res.rgCard[176] = Res.leaner.findRegion("obj/ss4");
        Res.rgCard[177] = Res.leaner.findRegion("obj/ss5");
        Res.rgCard[178] = Res.leaner.findRegion("obj/ss6");
        Res.rgCard[179] = Res.leaner.findRegion("obj/ss7");
        Res.rgCard[180] = Res.leaner.findRegion("obj/ss8");
        Res.rgCard[181] = Res.leaner.findRegion("obj/ss9");
        Res.rgCard[182] = Res.leaner.findRegion("obj/ss10");
        Res.rgCard[183] = Res.leaner.findRegion("obj/ss11");
        Res.rgCard[184] = Res.leaner.findRegion("obj/n0");
        Res.rgCard[185] = Res.leaner.findRegion("obj/n1");
        Res.rgCard[186] = Res.leaner.findRegion("obj/n2");
        Res.rgCard[187] = Res.leaner.findRegion("obj/n3");
        Res.rgCard[188] = Res.leaner.findRegion("obj/n4");
        Res.rgCard[189] = Res.leaner.findRegion("obj/nn0");
        Res.rgCard[190] = Res.leaner.findRegion("obj/nn1");
        Res.rgCard[191] = Res.leaner.findRegion("obj/nn2");
        Res.rgCard[192] = Res.leaner.findRegion("obj/nn3");
        Res.rgCard[193] = Res.leaner.findRegion("obj/nn4");
        Res.rgCard[194] = Res.leaner.findRegion("obj/nn5");
        Res.rgCard[195] = Res.leaner.findRegion("obj/nn6");
        Res.rgCard[196] = Res.leaner.findRegion("obj/nn7");
        Res.rgCard[197] = Res.leaner.findRegion("obj/nn8");
        Res.rgCard[198] = Res.leaner.findRegion("obj/nn9");
        Res.rgCard[199] = Res.leaner.findRegion("obj/nn10");
        Res.rgCard[200] = Res.leaner.findRegion("obj/nn11");
        Res.rgCard[201] = Res.leaner.findRegion("obj/b0");
        Res.rgCard[202] = Res.leaner.findRegion("obj/b1");
        Res.rgCard[203] = Res.leaner.findRegion("obj/b2");
        Res.rgCard[204] = Res.leaner.findRegion("obj/b3");
        Res.rgCard[205] = Res.leaner.findRegion("obj/b4");
        Res.rgCard[206] = Res.leaner.findRegion("obj/bb0");
        Res.rgCard[207] = Res.leaner.findRegion("obj/bb1");
        Res.rgCard[208] = Res.leaner.findRegion("obj/bb2");
        Res.rgCard[209] = Res.leaner.findRegion("obj/bb3");
        Res.rgCard[210] = Res.leaner.findRegion("obj/bb4");
        Res.rgCard[211] = Res.leaner.findRegion("obj/bb5");
        Res.rgCard[212] = Res.leaner.findRegion("obj/bb6");
        Res.rgCard[213] = Res.leaner.findRegion("obj/bb7");
        Res.rgCard[214] = Res.leaner.findRegion("obj/bb8");
        Res.rgCard[215] = Res.leaner.findRegion("obj/bb9");
        Res.rgCard[216] = Res.leaner.findRegion("obj/bb10");
        Res.rgCard[217] = Res.leaner.findRegion("obj/bb11");
        Res.rgCard[218] = Res.leaner.findRegion("obj/j0");
        Res.rgCard[219] = Res.leaner.findRegion("obj/j1");
        Res.rgCard[220] = Res.leaner.findRegion("obj/j2");
        Res.rgCard[221] = Res.leaner.findRegion("obj/j3");
        Res.rgCard[222] = Res.leaner.findRegion("obj/j4");
        Res.rgCard[223] = Res.leaner.findRegion("obj/jj0");
        Res.rgCard[224] = Res.leaner.findRegion("obj/jj1");
        Res.rgCard[225] = Res.leaner.findRegion("obj/jj2");
        Res.rgCard[226] = Res.leaner.findRegion("obj/jj3");
        Res.rgCard[227] = Res.leaner.findRegion("obj/jj4");
        Res.rgCard[228] = Res.leaner.findRegion("obj/jj5");
        Res.rgCard[229] = Res.leaner.findRegion("obj/jj6");
        Res.rgCard[230] = Res.leaner.findRegion("obj/jj7");
        Res.rgCard[231] = Res.leaner.findRegion("obj/jj8");
        Res.rgCard[232] = Res.leaner.findRegion("obj/jj9");
        Res.rgCard[233] = Res.leaner.findRegion("obj/jj10");
        Res.rgCard[234] = Res.leaner.findRegion("obj/jj11");
    }

    private static void iniCoin() {
        int v14 = 3;
        float v4 = 0.1f;
        Res.rgCoin[0] = Res.leaner.findRegion("coin0");
        Res.rgCoin[1] = Res.leaner.findRegion("coin1");
        Res.rgCoin[2] = Res.leaner.findRegion("coin2");
        int v13;
        for(v13 = 0; v13 < 30; ++v13) {
            Res.coin[v13] = new Coin(v14, v4, v14);
            Res.coin[v13].setSize(Util.getWidth(38f), Util.getHeight(38f));
            Res.coin[v13].col_margin_height = Util.getWidth(3f);
            Res.coin[v13].col_margin_width = Util.getHeight(3f);
            Res.coin[v13].half_width = Util.getWidth(19f);
            Res.coin[v13].half_height = Util.getHeight(19f);
            Res.coin[v13].setPosition(Util.getLeft(0f), Util.getTop(0f, Res.coin[v13].height));
            Coin v0 = Res.coin[v13];
            int[] v5 = new int[1];
            v5[0] = 1;
            v0.setPart(0, "N", 0, v4, v5);
            Res.coin[v13].setPart(1, "L", 0, v4, new int[]{1, 2, 0});
            Res.coin[v13].setPart(2, "R", 0, v4, new int[]{1, 0, 2});
            Res.coin[v13].visible = false;
        }
    }

    private static void iniEtc() {
        TextureRegion[] v2 = new TextureRegion[10];
        v2[0] = Res.leaner.findRegion("wave01");
        v2[1] = Res.leaner.findRegion("wave02");
        v2[2] = Res.leaner.findRegion("wave03");
        v2[3] = Res.leaner.findRegion("wave04");
        v2[4] = Res.leaner.findRegion("wave05");
        v2[5] = Res.leaner.findRegion("wave06");
        v2[6] = Res.leaner.findRegion("wave07");
        v2[7] = Res.leaner.findRegion("wave08");
        v2[8] = Res.leaner.findRegion("wave09");
        v2[9] = Res.leaner.findRegion("wave10");
        Res.aniClick = new Ani(0, 0.01f, v2);
        Res.aniClick.bHideWhenStop = true;
        Res.aniClick.visible = false;
        TextureRegion[] v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("backlight");
        Res.imgBackLight = new Img(v1);
        Res.imgBackLight.setSize(Util.getWidth(256f), Util.getHeight(364f));
        Res.imgBackLight.setPosition(Util.getLeft(0f), Util.getTop(0f, Res.imgBackLight.height));
        Res.imgBackLight.visible = false;
    }

    private static void iniEvent() {
        TextureRegion[] v2 = new TextureRegion[2];
        v2[0] = Res.leaner.findRegion("event/eventback0");
        v2[1] = Res.leaner.findRegion("event/eventback1");
        Res.aniEventBack = new Ani(1, 0.2f, v2);
        Res.aniEventBack.setSize(Util.getWidth(768f), Util.getHeight(900f));
        Res.aniEventBack.setPosition(Util.getLeft(0f), Util.getTop(-150f, Res.aniEventBack.height));
        Res.aniEventBack.play(false);
        Res.aniEventBack.visible = false;
        TextureRegion[] v4 = new TextureRegion[179];
        v4[0] = Res.leaner.findRegion("event/eventbar0");
        v4[1] = Res.leaner.findRegion("event/eventbar1");
        v4[2] = Res.leaner.findRegion("event/eventbar2");
        v4[3] = Res.leaner.findRegion("event/eventbar3");
        v4[4] = Res.leaner.findRegion("event/eventbar4");
        v4[5] = Res.leaner.findRegion("event/eventbar5");
        v4[6] = Res.leaner.findRegion("event/eventbar6");
        v4[7] = Res.leaner.findRegion("event/eventbar7");
        v4[8] = Res.leaner.findRegion("event/eventbar8");
        v4[9] = Res.leaner.findRegion("event/eventbar9");
        v4[10] = Res.leaner.findRegion("event/eventbar10");
        v4[11] = Res.leaner.findRegion("event/eventbar11");
        v4[12] = Res.leaner.findRegion("event/eventbar12");
        v4[13] = Res.leaner.findRegion("event/eventbar13");
        v4[14] = Res.leaner.findRegion("event/eventbar14");
        v4[15] = Res.leaner.findRegion("event/eventbar15");
        v4[16] = Res.leaner.findRegion("event/eventbar16");
        v4[17] = Res.leaner.findRegion("event/eventbar17");
        v4[18] = Res.leaner.findRegion("event/eventbar18");
        v4[19] = Res.leaner.findRegion("event/eventbar19");
        v4[20] = Res.leaner.findRegion("event/eventbar20");
        v4[21] = Res.leaner.findRegion("event/eventbar21");
        v4[22] = Res.leaner.findRegion("event/eventbar22");
        v4[23] = Res.leaner.findRegion("event/eventbar23");
        v4[24] = Res.leaner.findRegion("event/eventbar24");
        v4[25] = Res.leaner.findRegion("event/eventbar25");
        v4[26] = Res.leaner.findRegion("event/eventbar26");
        v4[27] = Res.leaner.findRegion("event/eventbar27");
        v4[28] = Res.leaner.findRegion("event/eventbar28");
        v4[29] = Res.leaner.findRegion("event/eventbar29");
        v4[30] = Res.leaner.findRegion("event/eventbar30");
        v4[31] = Res.leaner.findRegion("event/eventbar31");
        v4[32] = Res.leaner.findRegion("event/eventbar32");
        v4[33] = Res.leaner.findRegion("event/eventbar33");
        v4[34] = Res.leaner.findRegion("event/eventbar34");
        v4[35] = Res.leaner.findRegion("event/eventbar35");
        v4[36] = Res.leaner.findRegion("event/eventbar36");
        v4[37] = Res.leaner.findRegion("event/eventbar37");
        v4[38] = Res.leaner.findRegion("event/eventbar38");
        v4[39] = Res.leaner.findRegion("event/eventbar39");
        v4[40] = Res.leaner.findRegion("event/eventbar40");
        v4[41] = Res.leaner.findRegion("event/eventbar41");
        v4[42] = Res.leaner.findRegion("event/eventbar42");
        v4[43] = Res.leaner.findRegion("event/eventbar43");
        v4[44] = Res.leaner.findRegion("event/eventbar44");
        v4[45] = Res.leaner.findRegion("event/eventseven0");
        v4[46] = Res.leaner.findRegion("event/eventseven1");
        v4[47] = Res.leaner.findRegion("event/eventseven2");
        v4[48] = Res.leaner.findRegion("event/eventseven3");
        v4[49] = Res.leaner.findRegion("event/eventseven4");
        v4[50] = Res.leaner.findRegion("event/eventseven5");
        v4[51] = Res.leaner.findRegion("event/eventseven6");
        v4[52] = Res.leaner.findRegion("event/eventseven7");
        v4[53] = Res.leaner.findRegion("event/eventseven8");
        v4[54] = Res.leaner.findRegion("event/eventseven9");
        v4[55] = Res.leaner.findRegion("event/eventseven10");
        v4[56] = Res.leaner.findRegion("event/eventseven11");
        v4[57] = Res.leaner.findRegion("event/eventseven12");
        v4[58] = Res.leaner.findRegion("event/eventseven13");
        v4[59] = Res.leaner.findRegion("event/eventseven14");
        v4[60] = Res.leaner.findRegion("event/eventseven15");
        v4[61] = Res.leaner.findRegion("event/eventseven16");
        v4[62] = Res.leaner.findRegion("event/eventseven17");
        v4[63] = Res.leaner.findRegion("event/eventseven18");
        v4[64] = Res.leaner.findRegion("event/eventseven19");
        v4[65] = Res.leaner.findRegion("event/eventseven20");
        v4[66] = Res.leaner.findRegion("event/eventseven21");
        v4[67] = Res.leaner.findRegion("event/eventseven22");
        v4[68] = Res.leaner.findRegion("event/eventseven23");
        v4[69] = Res.leaner.findRegion("event/eventseven24");
        v4[70] = Res.leaner.findRegion("event/eventseven25");
        v4[71] = Res.leaner.findRegion("event/eventseven26");
        v4[72] = Res.leaner.findRegion("event/eventseven27");
        v4[73] = Res.leaner.findRegion("event/eventseven28");
        v4[74] = Res.leaner.findRegion("event/eventseven29");
        v4[75] = Res.leaner.findRegion("event/eventseven30");
        v4[76] = Res.leaner.findRegion("event/eventseven31");
        v4[77] = Res.leaner.findRegion("event/eventseven32");
        v4[78] = Res.leaner.findRegion("event/eventseven33");
        v4[79] = Res.leaner.findRegion("event/eventseven34");
        v4[80] = Res.leaner.findRegion("event/eventseven35");
        v4[81] = Res.leaner.findRegion("event/eventseven36");
        v4[82] = Res.leaner.findRegion("event/eventseven37");
        v4[83] = Res.leaner.findRegion("event/eventseven38");
        v4[84] = Res.leaner.findRegion("event/eventseven39");
        v4[85] = Res.leaner.findRegion("event/eventseven40");
        v4[86] = Res.leaner.findRegion("event/eventseven41");
        v4[87] = Res.leaner.findRegion("event/eventseven42");
        v4[88] = Res.leaner.findRegion("event/eventseven43");
        v4[89] = Res.leaner.findRegion("event/eventseven44");
        v4[90] = Res.leaner.findRegion("event/eventseven45");
        v4[91] = Res.leaner.findRegion("eventbar/event2bar0");
        v4[92] = Res.leaner.findRegion("eventbar/event2bar1");
        v4[93] = Res.leaner.findRegion("eventbar/event2bar2");
        v4[94] = Res.leaner.findRegion("eventbar/event2bar3");
        v4[95] = Res.leaner.findRegion("eventbar/event2bar4");
        v4[96] = Res.leaner.findRegion("eventbar/event2bar5");
        v4[97] = Res.leaner.findRegion("eventbar/event2bar6");
        v4[98] = Res.leaner.findRegion("eventbar/event2bar7");
        v4[99] = Res.leaner.findRegion("eventbar/event2bar8");
        v4[100] = Res.leaner.findRegion("eventbar/event2bar9");
        v4[101] = Res.leaner.findRegion("eventbar/event2bar10");
        v4[102] = Res.leaner.findRegion("eventbar/event2bar11");
        v4[103] = Res.leaner.findRegion("eventbar/event2bar12");
        v4[104] = Res.leaner.findRegion("eventbar/event2bar13");
        v4[105] = Res.leaner.findRegion("eventbar/event2bar14");
        v4[106] = Res.leaner.findRegion("eventbar/event2bar15");
        v4[107] = Res.leaner.findRegion("eventbar/event2bar16");
        v4[108] = Res.leaner.findRegion("eventbar/event2bar17");
        v4[109] = Res.leaner.findRegion("eventbar/event2bar18");
        v4[110] = Res.leaner.findRegion("eventbar/event2bar19");
        v4[111] = Res.leaner.findRegion("eventbar/event2bar20");
        v4[112] = Res.leaner.findRegion("eventbar/event2bar21");
        v4[113] = Res.leaner.findRegion("eventbar/event2bar22");
        v4[114] = Res.leaner.findRegion("eventbar/event2bar23");
        v4[115] = Res.leaner.findRegion("eventbar/event2bar24");
        v4[116] = Res.leaner.findRegion("eventbar/event2bar25");
        v4[117] = Res.leaner.findRegion("eventbar/event2bar26");
        v4[118] = Res.leaner.findRegion("eventbar/event2bar27");
        v4[119] = Res.leaner.findRegion("eventbar/event2bar28");
        v4[120] = Res.leaner.findRegion("eventbar/event2bar29");
        v4[121] = Res.leaner.findRegion("eventbar/event2bar30");
        v4[122] = Res.leaner.findRegion("eventbar/event2bar31");
        v4[123] = Res.leaner.findRegion("eventbar/event2bar32");
        v4[124] = Res.leaner.findRegion("eventbar/event2bar33");
        v4[125] = Res.leaner.findRegion("eventbar/event2bar34");
        v4[126] = Res.leaner.findRegion("eventbar/event2bar35");
        v4[127] = Res.leaner.findRegion("eventbar/event2bar36");
        v4[128] = Res.leaner.findRegion("eventbar/event2bar37");
        v4[129] = Res.leaner.findRegion("eventbar/event2bar38");
        v4[130] = Res.leaner.findRegion("eventbar/event2bar39");
        v4[131] = Res.leaner.findRegion("eventbar/event2bar40");
        v4[132] = Res.leaner.findRegion("eventbar/event2bar41");
        v4[133] = Res.leaner.findRegion("eventbar/event2bar42");
        v4[134] = Res.leaner.findRegion("eventbar/event2bar43");
        v4[135] = Res.leaner.findRegion("eventbar/event2bar44");
        v4[136] = Res.leaner.findRegion("eventseven/eventseven0");
        v4[137] = Res.leaner.findRegion("eventseven/eventseven1");
        v4[138] = Res.leaner.findRegion("eventseven/eventseven2");
        v4[139] = Res.leaner.findRegion("eventseven/eventseven3");
        v4[140] = Res.leaner.findRegion("eventseven/eventseven4");
        v4[141] = Res.leaner.findRegion("eventseven/eventseven5");
        v4[142] = Res.leaner.findRegion("eventseven/eventseven6");
        v4[143] = Res.leaner.findRegion("eventseven/eventseven7");
        v4[144] = Res.leaner.findRegion("eventseven/eventseven8");
        v4[145] = Res.leaner.findRegion("eventseven/eventseven9");
        v4[146] = Res.leaner.findRegion("eventseven/eventseven10");
        v4[147] = Res.leaner.findRegion("eventseven/eventseven11");
        v4[148] = Res.leaner.findRegion("eventseven/eventseven12");
        v4[149] = Res.leaner.findRegion("eventseven/eventseven13");
        v4[150] = Res.leaner.findRegion("eventseven/eventseven14");
        v4[151] = Res.leaner.findRegion("eventseven/eventseven15");
        v4[152] = Res.leaner.findRegion("eventseven/eventseven16");
        v4[153] = Res.leaner.findRegion("eventseven/eventseven17");
        v4[154] = Res.leaner.findRegion("eventseven/eventseven18");
        v4[155] = Res.leaner.findRegion("eventseven/eventseven19");
        v4[156] = Res.leaner.findRegion("eventseven/eventseven20");
        v4[157] = Res.leaner.findRegion("eventseven/eventseven21");
        v4[158] = Res.leaner.findRegion("eventseven/eventseven22");
        v4[159] = Res.leaner.findRegion("eventseven/eventseven23");
        v4[160] = Res.leaner.findRegion("eventseven/eventseven24");
        v4[161] = Res.leaner.findRegion("eventseven/eventseven25");
        v4[162] = Res.leaner.findRegion("eventseven/eventseven26");
        v4[163] = Res.leaner.findRegion("eventseven/eventseven27");
        v4[164] = Res.leaner.findRegion("eventseven/eventseven28");
        v4[165] = Res.leaner.findRegion("eventseven/eventseven29");
        v4[166] = Res.leaner.findRegion("eventseven/eventseven30");
        v4[167] = Res.leaner.findRegion("eventseven/eventseven31");
        v4[168] = Res.leaner.findRegion("eventseven/eventseven32");
        v4[169] = Res.leaner.findRegion("eventseven/eventseven33");
        v4[170] = Res.leaner.findRegion("eventseven/eventseven34");
        v4[171] = Res.leaner.findRegion("eventseven/eventseven35");
        v4[172] = Res.leaner.findRegion("eventseven/eventseven36");
        v4[173] = Res.leaner.findRegion("eventseven/eventseven37");
        v4[174] = Res.leaner.findRegion("eventseven/eventseven38");
        v4[175] = Res.leaner.findRegion("eventseven/eventseven39");
        v4[176] = Res.leaner.findRegion("eventseven/eventseven40");
        v4[177] = Res.leaner.findRegion("eventseven/eventseven41");
        v4[178] = Res.leaner.findRegion("eventseven/eventseven42");
        Res.aniEvent = new Ani(4, 0.1f, v4);
        Res.aniEvent.setSize(Util.getWidth(768f), Util.getHeight(384f));
        Res.aniEvent.setPosition(Util.getLeft(0f), Util.getTop(50f, Res.aniEvent.height));
        Res.aniEvent.setPart(0, "bar", 0, 0.1f, new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135});
        Res.aniEvent.setPart(1, "seven", 0, 0.1f, new int[]{45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 87, 89, 90, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178});
        Res.aniEvent.setPart(2, "newbar", 0, 0.1f, new int[]{91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135});
        Res.aniEvent.setPart(3, "newseven", 0, 0.1f, new int[]{136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178});
        Res.aniEvent.play(false);
        Res.aniEvent.visible = false;
        Res.aniMiddleEvent[0] = new MiddleEvent(4, 0.2f, 235);
        Res.aniMiddleEvent[0].setPart(0, "t", 155, 0.2f, new int[]{155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166});
        Res.aniMiddleEvent[0].setPart(1, "s", 172, 0.2f, new int[]{172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183});
        Res.aniMiddleEvent[0].setPart(2, "j", 223, 0.2f, new int[]{223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234});
        Res.aniMiddleEvent[0].setPart(3, "b", 206, 207f, new int[]{208, 209, 210, 211, 212, 213, 214, 215, 216, 217});
        Res.aniMiddleEvent[0].setSize(Util.getWidth(((float)180)), Util.getHeight(((float)180)));
        Res.aniMiddleEvent[0].setPosition(Util.getLeft(((float)24)), Util.getTop(((float)350), 0f));
        Res.aniMiddleEvent[0].visible = false;
        Res.aniMiddleEvent[1] = new MiddleEvent(4, 0.2f, 235);
        Res.aniMiddleEvent[1].setPart(0, "t", 155, 0.2f, new int[]{155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166});
        Res.aniMiddleEvent[1].setPart(1, "s", 172, 0.2f, new int[]{172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183});
        Res.aniMiddleEvent[1].setPart(2, "j", 223, 0.2f, new int[]{223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234});
        Res.aniMiddleEvent[1].setPart(3, "b", 206, 207f, new int[]{208, 209, 210, 211, 212, 213, 214, 215, 216, 217});
        Res.aniMiddleEvent[1].setSize(Util.getWidth(((float)180)), Util.getHeight(((float)180)));
        Res.aniMiddleEvent[1].setPosition(Util.getLeft(((float)204)), Util.getTop(((float)350), 0f));
        Res.aniMiddleEvent[1].visible = false;
        Res.aniMiddleEvent[2] = new MiddleEvent(4, 0.2f, 235);
        Res.aniMiddleEvent[2].setPart(0, "t", 155, 0.2f, new int[]{155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166});
        Res.aniMiddleEvent[2].setPart(1, "s", 172, 0.2f, new int[]{172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183});
        Res.aniMiddleEvent[2].setPart(2, "j", 223, 0.2f, new int[]{223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234});
        Res.aniMiddleEvent[2].setPart(3, "b", 206, 207f, new int[]{208, 209, 210, 211, 212, 213, 214, 215, 216, 217});
        Res.aniMiddleEvent[2].setSize(Util.getWidth(((float)180)), Util.getHeight(((float)180)));
        Res.aniMiddleEvent[2].setPosition(Util.getLeft(((float)384)), Util.getTop(((float)350), 0f));
        Res.aniMiddleEvent[2].visible = false;
        Res.aniMiddleEvent[3] = new MiddleEvent(4, 0.2f, 235);
        Res.aniMiddleEvent[3].setPart(0, "t", 155, 0.2f, new int[]{155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166});
        Res.aniMiddleEvent[3].setPart(1, "s", 172, 0.2f, new int[]{172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183});
        Res.aniMiddleEvent[3].setPart(2, "j", 223, 0.2f, new int[]{223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234});
        Res.aniMiddleEvent[3].setPart(3, "b", 206, 207f, new int[]{208, 209, 210, 211, 212, 213, 214, 215, 216, 217});
        Res.aniMiddleEvent[3].setSize(Util.getWidth(((float)180)), Util.getHeight(((float)180)));
        Res.aniMiddleEvent[3].setPosition(Util.getLeft(((float)564)), Util.getTop(((float)350), 0f));
        Res.aniMiddleEvent[3].visible = false;
    }

    private static void iniFire() {
        float v9 = 0.04f;
        int v8 = 41;
        int v7 = 2;
        int v0;
        for(v0 = 0; v0 < v8; ++v0) {
            Res.rgFire[v0] = Res.leaner.findRegion("fire" + String.valueOf(v0));
        }

        Res.fire[0] = new Fire(0, v9, v8);
        Res.fire[1] = new Fire(0, v9, v8);
        Res.fire[v7] = new Fire(0, v9, v8);
        Res.fire[0].setSize(Util.getWidth(180f), Util.getHeight(330f));
        Res.fire[1].setSize(Util.getWidth(180f), Util.getHeight(330f));
        Res.fire[v7].setSize(Util.getWidth(180f), Util.getHeight(330f));
        Res.fire[0].setPosition(Util.XCenter(Res.iBaseLinePixelX1, Res.fire[0].width), Util.getTop(92f, Res.fire[0].height));
        Res.fire[1].setPosition(Util.XCenter(Res.iBaseLinePixelX2, Res.fire[1].width), Util.getTop(92f, Res.fire[1].height));
        Res.fire[v7].setPosition(Util.XCenter(Res.iBaseLinePixelX3, Res.fire[v7].width), Util.getTop(92f, Res.fire[v7].height));
        Res.fire[0].bHideWhenStop = true;
        Res.fire[1].bHideWhenStop = true;
        Res.fire[v7].bHideWhenStop = true;
    }

    private static void iniFireworks() {
        float v15 = 256f;
        float v4 = 0.06f;
        int v14 = 30;
        Res.rgFireworks[0] = Res.leaner.findRegion("fireworks/fireworksa0");
        Res.rgFireworks[1] = Res.leaner.findRegion("fireworks/fireworksa1");
        Res.rgFireworks[2] = Res.leaner.findRegion("fireworks/fireworksa2");
        Res.rgFireworks[3] = Res.leaner.findRegion("fireworks/fireworksa3");
        Res.rgFireworks[4] = Res.leaner.findRegion("fireworks/fireworksa4");
        Res.rgFireworks[5] = Res.leaner.findRegion("fireworks/fireworksa5");
        Res.rgFireworks[6] = Res.leaner.findRegion("fireworks/fireworksa6");
        Res.rgFireworks[7] = Res.leaner.findRegion("fireworks/fireworksa7");
        Res.rgFireworks[8] = Res.leaner.findRegion("fireworks/fireworksa8");
        Res.rgFireworks[9] = Res.leaner.findRegion("fireworks/fireworksa9");
        Res.rgFireworks[10] = Res.leaner.findRegion("fireworks/fireworksa10");
        Res.rgFireworks[11] = Res.leaner.findRegion("fireworks/fireworksa11");
        Res.rgFireworks[12] = Res.leaner.findRegion("fireworks/fireworksa12");
        Res.rgFireworks[13] = Res.leaner.findRegion("fireworks/fireworksa13");
        Res.rgFireworks[14] = Res.leaner.findRegion("fireworks/fireworksa14");
        Res.rgFireworks[15] = Res.leaner.findRegion("fireworks/fireworksa15");
        Res.rgFireworks[16] = Res.leaner.findRegion("fireworks/fireworksa16");
        Res.rgFireworks[17] = Res.leaner.findRegion("fireworks/fireworksa17");
        Res.rgFireworks[18] = Res.leaner.findRegion("fireworks/fireworksa18");
        Res.rgFireworks[19] = Res.leaner.findRegion("fireworks/fireworksa19");
        Res.rgFireworks[20] = Res.leaner.findRegion("fireworks/fireworksa20");
        Res.rgFireworks[21] = Res.leaner.findRegion("fireworks/fireworksa21");
        Res.rgFireworks[22] = Res.leaner.findRegion("fireworks/fireworksa22");
        Res.rgFireworks[23] = Res.leaner.findRegion("fireworks/fireworksa23");
        Res.rgFireworks[24] = Res.leaner.findRegion("fireworks/fireworksa24");
        Res.rgFireworks[25] = Res.leaner.findRegion("fireworks/fireworksa25");
        Res.rgFireworks[26] = Res.leaner.findRegion("fireworks/fireworksa26");
        Res.rgFireworks[27] = Res.leaner.findRegion("fireworks/fireworksa27");
        Res.rgFireworks[28] = Res.leaner.findRegion("fireworks/fireworksa28");
        Res.rgFireworks[29] = Res.leaner.findRegion("fireworks/fireworksa29");
        Res.rgFireworks[v14] = Res.leaner.findRegion("fireworks/fireworksb0");
        Res.rgFireworks[31] = Res.leaner.findRegion("fireworks/fireworksb1");
        Res.rgFireworks[32] = Res.leaner.findRegion("fireworks/fireworksb2");
        Res.rgFireworks[33] = Res.leaner.findRegion("fireworks/fireworksb3");
        Res.rgFireworks[34] = Res.leaner.findRegion("fireworks/fireworksb4");
        Res.rgFireworks[35] = Res.leaner.findRegion("fireworks/fireworksb5");
        Res.rgFireworks[36] = Res.leaner.findRegion("fireworks/fireworksb6");
        Res.rgFireworks[37] = Res.leaner.findRegion("fireworks/fireworksb7");
        Res.rgFireworks[38] = Res.leaner.findRegion("fireworks/fireworksb8");
        Res.rgFireworks[39] = Res.leaner.findRegion("fireworks/fireworksb9");
        Res.rgFireworks[40] = Res.leaner.findRegion("fireworks/fireworksb10");
        Res.rgFireworks[41] = Res.leaner.findRegion("fireworks/fireworksb11");
        Res.rgFireworks[42] = Res.leaner.findRegion("fireworks/fireworksb12");
        Res.rgFireworks[43] = Res.leaner.findRegion("fireworks/fireworksb13");
        Res.rgFireworks[44] = Res.leaner.findRegion("fireworks/fireworksb14");
        Res.rgFireworks[45] = Res.leaner.findRegion("fireworks/fireworksb15");
        Res.rgFireworks[46] = Res.leaner.findRegion("fireworks/fireworksb16");
        Res.rgFireworks[47] = Res.leaner.findRegion("fireworks/fireworksb17");
        Res.rgFireworks[48] = Res.leaner.findRegion("fireworks/fireworksb18");
        Res.rgFireworks[49] = Res.leaner.findRegion("fireworks/fireworksb19");
        Res.rgFireworks[50] = Res.leaner.findRegion("fireworks/fireworksb20");
        Res.rgFireworks[51] = Res.leaner.findRegion("fireworks/fireworksb21");
        Res.rgFireworks[52] = Res.leaner.findRegion("fireworks/fireworksb22");
        Res.rgFireworks[53] = Res.leaner.findRegion("fireworks/fireworksb23");
        Res.rgFireworks[54] = Res.leaner.findRegion("fireworks/fireworksb24");
        Res.rgFireworks[55] = Res.leaner.findRegion("fireworks/fireworksb25");
        Res.rgFireworks[56] = Res.leaner.findRegion("fireworks/fireworksb26");
        Res.rgFireworks[57] = Res.leaner.findRegion("fireworks/fireworksb27");
        Res.rgFireworks[58] = Res.leaner.findRegion("fireworks/fireworksb28");
        Res.rgFireworks[59] = Res.leaner.findRegion("fireworks/fireworksb29");
        Res.rgFireworks[60] = Res.leaner.findRegion("fireworks/fireworksc0");
        Res.rgFireworks[61] = Res.leaner.findRegion("fireworks/fireworksc1");
        Res.rgFireworks[62] = Res.leaner.findRegion("fireworks/fireworksc2");
        Res.rgFireworks[63] = Res.leaner.findRegion("fireworks/fireworksc3");
        Res.rgFireworks[64] = Res.leaner.findRegion("fireworks/fireworksc4");
        Res.rgFireworks[65] = Res.leaner.findRegion("fireworks/fireworksc5");
        Res.rgFireworks[66] = Res.leaner.findRegion("fireworks/fireworksc6");
        Res.rgFireworks[67] = Res.leaner.findRegion("fireworks/fireworksc7");
        Res.rgFireworks[68] = Res.leaner.findRegion("fireworks/fireworksc8");
        Res.rgFireworks[69] = Res.leaner.findRegion("fireworks/fireworksc9");
        Res.rgFireworks[70] = Res.leaner.findRegion("fireworks/fireworksc10");
        Res.rgFireworks[71] = Res.leaner.findRegion("fireworks/fireworksc11");
        Res.rgFireworks[72] = Res.leaner.findRegion("fireworks/fireworksc12");
        Res.rgFireworks[73] = Res.leaner.findRegion("fireworks/fireworksc13");
        Res.rgFireworks[74] = Res.leaner.findRegion("fireworks/fireworksc14");
        Res.rgFireworks[75] = Res.leaner.findRegion("fireworks/fireworksc15");
        Res.rgFireworks[76] = Res.leaner.findRegion("fireworks/fireworksc16");
        Res.rgFireworks[77] = Res.leaner.findRegion("fireworks/fireworksc17");
        Res.rgFireworks[78] = Res.leaner.findRegion("fireworks/fireworksc18");
        Res.rgFireworks[79] = Res.leaner.findRegion("fireworks/fireworksc19");
        Res.rgFireworks[80] = Res.leaner.findRegion("fireworks/fireworksc20");
        Res.rgFireworks[81] = Res.leaner.findRegion("fireworks/fireworksc21");
        Res.rgFireworks[82] = Res.leaner.findRegion("fireworks/fireworksc22");
        Res.rgFireworks[83] = Res.leaner.findRegion("fireworks/fireworksc23");
        Res.rgFireworks[84] = Res.leaner.findRegion("fireworks/fireworksc24");
        Res.rgFireworks[85] = Res.leaner.findRegion("fireworks/fireworksc25");
        Res.rgFireworks[86] = Res.leaner.findRegion("fireworks/fireworksc26");
        Res.rgFireworks[87] = Res.leaner.findRegion("fireworks/fireworksc27");
        Res.rgFireworks[88] = Res.leaner.findRegion("fireworks/fireworksc28");
        Res.rgFireworks[89] = Res.leaner.findRegion("fireworks/fireworksc29");
        int v13;
        for(v13 = 0; v13 < Res.fireworks.length; ++v13) {
            Res.fireworks[v13] = new Fireworks(3, 0.1f, 90);
            Res.fireworks[v13].setSize(Util.getWidth(v15), Util.getHeight(v15));
            Res.fireworks[v13].setPart(0, "1", 0, v4, new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29});
            Res.fireworks[v13].setPart(1, "2", 0, v4, new int[]{30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59});
            Res.fireworks[v13].setPart(2, "3", 0, v4, new int[]{60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89});
            Res.fireworks[v13].visible = false;
            Res.fireworks[v13].play(false);
        }
    }

    private static void iniFish() {
        Res.rgFishRight[0] = Res.leaner.findRegion("fish/b1fish0");
        Res.rgFishRight[1] = Res.leaner.findRegion("fish/b1fish1");
        Res.rgFishRight[2] = Res.leaner.findRegion("fish/b1fish2");
        Res.rgFishRight[3] = Res.leaner.findRegion("fish/b1fish3");
        Res.rgFishRight[4] = Res.leaner.findRegion("fish/b1fish4");
        Res.rgFishRight[5] = Res.leaner.findRegion("fish/b1fish5");
        Res.rgFishRight[6] = Res.leaner.findRegion("fish/b2fish0");
        Res.rgFishRight[7] = Res.leaner.findRegion("fish/b2fish1");
        Res.rgFishRight[8] = Res.leaner.findRegion("fish/b2fish2");
        Res.rgFishRight[9] = Res.leaner.findRegion("fish/b2fish3");
        Res.rgFishRight[10] = Res.leaner.findRegion("fish/b2fish4");
        Res.rgFishRight[11] = Res.leaner.findRegion("fish/b2fish5");
        Res.rgFishRight[12] = Res.leaner.findRegion("fish/b3fish0");
        Res.rgFishRight[13] = Res.leaner.findRegion("fish/b3fish1");
        Res.rgFishRight[14] = Res.leaner.findRegion("fish/b3fish2");
        Res.rgFishRight[15] = Res.leaner.findRegion("fish/b3fish3");
        Res.rgFishRight[16] = Res.leaner.findRegion("fish/b3fish4");
        Res.rgFishRight[17] = Res.leaner.findRegion("fish/b3fish5");
        Res.rgFishRight[18] = Res.leaner.findRegion("fish/b4fish0");
        Res.rgFishRight[19] = Res.leaner.findRegion("fish/b4fish1");
        Res.rgFishRight[20] = Res.leaner.findRegion("fish/b4fish2");
        Res.rgFishRight[21] = Res.leaner.findRegion("fish/b4fish3");
        Res.rgFishRight[22] = Res.leaner.findRegion("fish/b4fish4");
        Res.rgFishRight[23] = Res.leaner.findRegion("fish/b4fish5");
        Res.rgFishRight[24] = Res.leaner.findRegion("fish/b5fish0");
        Res.rgFishRight[25] = Res.leaner.findRegion("fish/b5fish1");
        Res.rgFishRight[26] = Res.leaner.findRegion("fish/b5fish2");
        Res.rgFishRight[27] = Res.leaner.findRegion("fish/b5fish3");
        Res.rgFishRight[28] = Res.leaner.findRegion("fish/b5fish4");
        Res.rgFishRight[29] = Res.leaner.findRegion("fish/b5fish5");
        Res.rgFishRight[30] = Res.leaner.findRegion("fish/b6fish0");
        Res.rgFishRight[31] = Res.leaner.findRegion("fish/b6fish1");
        Res.rgFishRight[32] = Res.leaner.findRegion("fish/b6fish2");
        Res.rgFishRight[33] = Res.leaner.findRegion("fish/b6fish3");
        Res.rgFishRight[34] = Res.leaner.findRegion("fish/b6fish4");
        Res.rgFishRight[35] = Res.leaner.findRegion("fish/b6fish5");
        Res.rgFishRight[36] = Res.leaner.findRegion("fish/b7fish0");
        Res.rgFishRight[37] = Res.leaner.findRegion("fish/b7fish1");
        Res.rgFishRight[38] = Res.leaner.findRegion("fish/b7fish2");
        Res.rgFishRight[39] = Res.leaner.findRegion("fish/b7fish3");
        Res.rgFishRight[40] = Res.leaner.findRegion("fish/b7fish4");
        Res.rgFishRight[41] = Res.leaner.findRegion("fish/b7fish5");
        Res.rgFishLeft[0] = Res.leaner.findRegion("fish2/b1fish0");
        Res.rgFishLeft[1] = Res.leaner.findRegion("fish2/b1fish1");
        Res.rgFishLeft[2] = Res.leaner.findRegion("fish2/b1fish2");
        Res.rgFishLeft[3] = Res.leaner.findRegion("fish2/b1fish3");
        Res.rgFishLeft[4] = Res.leaner.findRegion("fish2/b1fish4");
        Res.rgFishLeft[5] = Res.leaner.findRegion("fish2/b1fish5");
        Res.rgFishLeft[6] = Res.leaner.findRegion("fish2/b2fish0");
        Res.rgFishLeft[7] = Res.leaner.findRegion("fish2/b2fish1");
        Res.rgFishLeft[8] = Res.leaner.findRegion("fish2/b2fish2");
        Res.rgFishLeft[9] = Res.leaner.findRegion("fish2/b2fish3");
        Res.rgFishLeft[10] = Res.leaner.findRegion("fish2/b2fish4");
        Res.rgFishLeft[11] = Res.leaner.findRegion("fish2/b2fish5");
        Res.rgFishLeft[12] = Res.leaner.findRegion("fish2/b3fish0");
        Res.rgFishLeft[13] = Res.leaner.findRegion("fish2/b3fish1");
        Res.rgFishLeft[14] = Res.leaner.findRegion("fish2/b3fish2");
        Res.rgFishLeft[15] = Res.leaner.findRegion("fish2/b3fish3");
        Res.rgFishLeft[16] = Res.leaner.findRegion("fish2/b3fish4");
        Res.rgFishLeft[17] = Res.leaner.findRegion("fish2/b3fish5");
        Res.rgFishLeft[18] = Res.leaner.findRegion("fish2/b4fish0");
        Res.rgFishLeft[19] = Res.leaner.findRegion("fish2/b4fish1");
        Res.rgFishLeft[20] = Res.leaner.findRegion("fish2/b4fish2");
        Res.rgFishLeft[21] = Res.leaner.findRegion("fish2/b4fish3");
        Res.rgFishLeft[22] = Res.leaner.findRegion("fish2/b4fish4");
        Res.rgFishLeft[23] = Res.leaner.findRegion("fish2/b4fish5");
        Res.rgFishLeft[24] = Res.leaner.findRegion("fish2/b5fish0");
        Res.rgFishLeft[25] = Res.leaner.findRegion("fish2/b5fish1");
        Res.rgFishLeft[26] = Res.leaner.findRegion("fish2/b5fish2");
        Res.rgFishLeft[27] = Res.leaner.findRegion("fish2/b5fish3");
        Res.rgFishLeft[28] = Res.leaner.findRegion("fish2/b5fish4");
        Res.rgFishLeft[29] = Res.leaner.findRegion("fish2/b5fish5");
        Res.rgFishLeft[30] = Res.leaner.findRegion("fish2/b6fish0");
        Res.rgFishLeft[31] = Res.leaner.findRegion("fish2/b6fish1");
        Res.rgFishLeft[32] = Res.leaner.findRegion("fish2/b6fish2");
        Res.rgFishLeft[33] = Res.leaner.findRegion("fish2/b6fish3");
        Res.rgFishLeft[34] = Res.leaner.findRegion("fish2/b6fish4");
        Res.rgFishLeft[35] = Res.leaner.findRegion("fish2/b6fish5");
        Res.rgFishLeft[36] = Res.leaner.findRegion("fish2/b7fish0");
        Res.rgFishLeft[37] = Res.leaner.findRegion("fish2/b7fish1");
        Res.rgFishLeft[38] = Res.leaner.findRegion("fish2/b7fish2");
        Res.rgFishLeft[39] = Res.leaner.findRegion("fish2/b7fish3");
        Res.rgFishLeft[40] = Res.leaner.findRegion("fish2/b7fish4");
        Res.rgFishLeft[41] = Res.leaner.findRegion("fish2/b7fish5");
        int v6;
        for(v6 = 0; v6 < Res.fishRight.length; ++v6) {
            Res.fishRight[v6] = new Fish(7, 0.5f, 42);
            Res.fishRight[v6].setSize(Util.getWidth(128f), Util.getHeight(64f));
            Res.fishRight[v6].setPart(0, "1", 0, 0.05f, new int[]{0, 1, 2, 3, 4, 5});
            Res.fishRight[v6].setPart(1, "2", 6, 0.05f, new int[]{6, 7, 8, 9, 10, 11});
            Res.fishRight[v6].setPart(2, "3", 12, 0.05f, new int[]{12, 13, 14, 15, 16, 17});
            Res.fishRight[v6].setPart(3, "4", 18, 0.05f, new int[]{18, 19, 20, 21, 22, 23});
            Res.fishRight[v6].setPart(4, "5", 24, 0.05f, new int[]{24, 25, 26, 27, 28, 29});
            Res.fishRight[v6].setPart(5, "6", 30, 0.05f, new int[]{30, 31, 32, 33, 34, 35});
            Res.fishRight[v6].setPart(6, "7", 36, 0.05f, new int[]{36, 37, 38, 39, 40, 41});
            Res.fishRight[v6].visible = false;
            Res.fishRight[v6].play(false);
        }

        for(v6 = 0; v6 < Res.fishLeft.length; ++v6) {
            Res.fishLeft[v6] = new Fish(7, 0.5f, 42);
            Res.fishLeft[v6].setSize(Util.getWidth(128f), Util.getHeight(64f));
            Res.fishLeft[v6].setPart(0, "1", 0, 0.05f, new int[]{0, 1, 2, 3, 4, 5});
            Res.fishLeft[v6].setPart(1, "2", 6, 0.05f, new int[]{6, 7, 8, 9, 10, 11});
            Res.fishLeft[v6].setPart(2, "3", 12, 0.05f, new int[]{12, 13, 14, 15, 16, 17});
            Res.fishLeft[v6].setPart(3, "4", 18, 0.05f, new int[]{18, 19, 20, 21, 22, 23});
            Res.fishLeft[v6].setPart(4, "5", 24, 0.05f, new int[]{24, 25, 26, 27, 28, 29});
            Res.fishLeft[v6].setPart(5, "6", 30, 0.05f, new int[]{30, 31, 32, 33, 34, 35});
            Res.fishLeft[v6].setPart(6, "7", 36, 0.05f, new int[]{36, 37, 38, 39, 40, 41});
            Res.fishLeft[v6].visible = false;
            Res.fishLeft[v6].play(false);
        }
    }

    private static void iniGage() {
        int v9 = 3;
        int v8 = 2;
        int v5 = 10;
        Res.rgGage[0] = Res.leaner.findRegion("gage1");
        Res.rgGage[1] = Res.leaner.findRegion("gage2");
        Res.rgGage[v8] = Res.leaner.findRegion("gage3");
        Res.rgGage[v9] = Res.leaner.findRegion("gage4");
        Res.rgGage[4] = Res.leaner.findRegion("gage5");
        Res.rgGage[5] = Res.leaner.findRegion("gage6");
        Res.rgGage[6] = Res.leaner.findRegion("gage7");
        Res.rgGage[7] = Res.leaner.findRegion("gage8");
        Res.rgGage[8] = Res.leaner.findRegion("gage9");
        Res.rgGage[9] = Res.leaner.findRegion("gage10");
        Res.rgGage[v5] = Res.leaner.findRegion("gage11");
        Res.rgGage[11] = Res.leaner.findRegion("gage12");
        Res.rgGage[12] = Res.leaner.findRegion("gage13");
        Res.rgGage[13] = Res.leaner.findRegion("gage14");
        Res.rgGage[14] = Res.leaner.findRegion("gage15");
        int v0;
        for(v0 = 0; v0 < v5; ++v0) {
            Res.gage[v0] = new Gage();
            Res.gage[v0].setSize(Util.getWidth(5f), Util.getHeight(56f));
            Res.gage[v0].setPosition(Util.getLeft(((float)(v0 * 6 + 698))), Util.getBottom(415f));
            Gage v1 = Res.gage[v0];
            String[] v2 = new String[15];
            v2[0] = "0";
            v2[1] = "1";
            v2[v8] = "2";
            v2[v9] = "3";
            v2[4] = "4";
            v2[5] = "5";
            v2[6] = "6";
            v2[7] = "7";
            v2[8] = "8";
            v2[9] = "9";
            v2[v5] = "A";
            v2[11] = "B";
            v2[12] = "C";
            v2[13] = "D";
            v2[14] = "E";
            v1.setNames(v2);
            Res.gage[v0].setImage("0");
        }
    }

    private static void iniItems() {
        int v13 = 11;
        int v12 = 3;
        int v11 = 2;
        Res.rgItem = new TextureRegion[197];
        Res.rgItem[0] = Res.leaner.findRegion("item/f0");
        Res.rgItem[1] = Res.leaner.findRegion("item/ff0");
        Res.rgItem[v11] = Res.leaner.findRegion("item/ff1");
        Res.rgItem[v12] = Res.leaner.findRegion("item/ff2");
        Res.rgItem[4] = Res.leaner.findRegion("item/ff3");
        Res.rgItem[5] = Res.leaner.findRegion("item/ff4");
        Res.rgItem[6] = Res.leaner.findRegion("item/ff5");
        Res.rgItem[7] = Res.leaner.findRegion("item/ff6");
        Res.rgItem[8] = Res.leaner.findRegion("item/ff7");
        Res.rgItem[9] = Res.leaner.findRegion("item/ff8");
        Res.rgItem[10] = Res.leaner.findRegion("item/ff9");
        Res.rgItem[v13] = Res.leaner.findRegion("item/ff10");
        Res.rgItem[12] = Res.leaner.findRegion("item/ff11");
        Res.rgItem[13] = Res.leaner.findRegion("item/ff12");
        Res.rgItem[14] = Res.leaner.findRegion("item/ff13");
        Res.rgItem[15] = Res.leaner.findRegion("item/ff14");
        Res.rgItem[16] = Res.leaner.findRegion("item/ff15");
        Res.rgItem[17] = Res.leaner.findRegion("item/ff16");
        Res.rgItem[18] = Res.leaner.findRegion("item/ff17");
        Res.rgItem[19] = Res.leaner.findRegion("item/ff18");
        Res.rgItem[20] = Res.leaner.findRegion("item/ff19");
        Res.rgItem[21] = Res.leaner.findRegion("item/ff20");
        Res.rgItem[22] = Res.leaner.findRegion("item/ff21");
        Res.rgItem[23] = Res.leaner.findRegion("item/ff22");
        Res.rgItem[24] = Res.leaner.findRegion("item/ff23");
        Res.rgItem[25] = Res.leaner.findRegion("item/ff24");
        Res.rgItem[26] = Res.leaner.findRegion("item/ff25");
        Res.rgItem[27] = Res.leaner.findRegion("item/ff26");
        Res.rgItem[28] = Res.leaner.findRegion("item/ff27");
        Res.rgItem[29] = Res.leaner.findRegion("item/ff28");
        Res.rgItem[30] = Res.leaner.findRegion("item/ff29");
        Res.rgItem[31] = Res.leaner.findRegion("item/v0");
        Res.rgItem[32] = Res.leaner.findRegion("item/vv0");
        Res.rgItem[33] = Res.leaner.findRegion("item/vv1");
        Res.rgItem[34] = Res.leaner.findRegion("item/vv2");
        Res.rgItem[35] = Res.leaner.findRegion("item/vv3");
        Res.rgItem[36] = Res.leaner.findRegion("item/vv4");
        Res.rgItem[37] = Res.leaner.findRegion("item/vv5");
        Res.rgItem[38] = Res.leaner.findRegion("item/vv6");
        Res.rgItem[39] = Res.leaner.findRegion("item/vv7");
        Res.rgItem[40] = Res.leaner.findRegion("item/vv8");
        Res.rgItem[41] = Res.leaner.findRegion("item/vv9");
        Res.rgItem[42] = Res.leaner.findRegion("item/vv10");
        Res.rgItem[43] = Res.leaner.findRegion("item/vv11");
        Res.rgItem[44] = Res.leaner.findRegion("item/vv12");
        Res.rgItem[45] = Res.leaner.findRegion("item/vv13");
        Res.rgItem[46] = Res.leaner.findRegion("item/vv14");
        Res.rgItem[47] = Res.leaner.findRegion("item/vv15");
        Res.rgItem[48] = Res.leaner.findRegion("item/vv16");
        Res.rgItem[49] = Res.leaner.findRegion("item/vv17");
        Res.rgItem[50] = Res.leaner.findRegion("item/vv18");
        Res.rgItem[51] = Res.leaner.findRegion("item/vv19");
        Res.rgItem[52] = Res.leaner.findRegion("item/vv20");
        Res.rgItem[53] = Res.leaner.findRegion("item/vv21");
        Res.rgItem[54] = Res.leaner.findRegion("item/vv22");
        Res.rgItem[55] = Res.leaner.findRegion("item/vv23");
        Res.rgItem[56] = Res.leaner.findRegion("item/vv24");
        Res.rgItem[57] = Res.leaner.findRegion("item/vv25");
        Res.rgItem[58] = Res.leaner.findRegion("item/vv26");
        Res.rgItem[59] = Res.leaner.findRegion("item/vv27");
        Res.rgItem[60] = Res.leaner.findRegion("item/vv28");
        Res.rgItem[61] = Res.leaner.findRegion("item/vv29");
        Res.rgItem[62] = Res.leaner.findRegion("item/b0");
        Res.rgItem[63] = Res.leaner.findRegion("item/b1");
        Res.rgItem[64] = Res.leaner.findRegion("item/b2");
        Res.rgItem[65] = Res.leaner.findRegion("item/b3");
        Res.rgItem[66] = Res.leaner.findRegion("item/b4");
        Res.rgItem[67] = Res.leaner.findRegion("item/b5");
        Res.rgItem[68] = Res.leaner.findRegion("item/b6");
        Res.rgItem[69] = Res.leaner.findRegion("item/b7");
        Res.rgItem[70] = Res.leaner.findRegion("item/bb0");
        Res.rgItem[71] = Res.leaner.findRegion("item/bb1");
        Res.rgItem[72] = Res.leaner.findRegion("item/bb2");
        Res.rgItem[73] = Res.leaner.findRegion("item/bb3");
        Res.rgItem[74] = Res.leaner.findRegion("item/bb4");
        Res.rgItem[75] = Res.leaner.findRegion("item/bb5");
        Res.rgItem[76] = Res.leaner.findRegion("item/bb6");
        Res.rgItem[77] = Res.leaner.findRegion("item/bb7");
        Res.rgItem[78] = Res.leaner.findRegion("item/c0");
        Res.rgItem[79] = Res.leaner.findRegion("item/c1");
        Res.rgItem[80] = Res.leaner.findRegion("item/c2");
        Res.rgItem[81] = Res.leaner.findRegion("item/c3");
        Res.rgItem[82] = Res.leaner.findRegion("item/c4");
        Res.rgItem[83] = Res.leaner.findRegion("item/c5");
        Res.rgItem[84] = Res.leaner.findRegion("item/c6");
        Res.rgItem[85] = Res.leaner.findRegion("item/c7");
        Res.rgItem[86] = Res.leaner.findRegion("item/cc0");
        Res.rgItem[87] = Res.leaner.findRegion("item/cc1");
        Res.rgItem[88] = Res.leaner.findRegion("item/cc2");
        Res.rgItem[89] = Res.leaner.findRegion("item/cc3");
        Res.rgItem[90] = Res.leaner.findRegion("item/cc4");
        Res.rgItem[91] = Res.leaner.findRegion("item/cc5");
        Res.rgItem[92] = Res.leaner.findRegion("item/cc6");
        Res.rgItem[93] = Res.leaner.findRegion("item/cc7");
        Res.rgItem[94] = Res.leaner.findRegion("item/cc8");
        Res.rgItem[95] = Res.leaner.findRegion("item/cc9");
        Res.rgItem[96] = Res.leaner.findRegion("item/cc10");
        Res.rgItem[97] = Res.leaner.findRegion("item/g0");
        Res.rgItem[98] = Res.leaner.findRegion("item/g1");
        Res.rgItem[99] = Res.leaner.findRegion("item/g2");
        Res.rgItem[100] = Res.leaner.findRegion("item/g3");
        Res.rgItem[101] = Res.leaner.findRegion("item/g4");
        Res.rgItem[102] = Res.leaner.findRegion("item/g5");
        Res.rgItem[103] = Res.leaner.findRegion("item/g6");
        Res.rgItem[104] = Res.leaner.findRegion("item/g7");
        Res.rgItem[105] = Res.leaner.findRegion("item/gg0");
        Res.rgItem[106] = Res.leaner.findRegion("item/gg1");
        Res.rgItem[107] = Res.leaner.findRegion("item/gg2");
        Res.rgItem[108] = Res.leaner.findRegion("item/gg3");
        Res.rgItem[109] = Res.leaner.findRegion("item/gg4");
        Res.rgItem[110] = Res.leaner.findRegion("item/gg5");
        Res.rgItem[111] = Res.leaner.findRegion("item/gg6");
        Res.rgItem[112] = Res.leaner.findRegion("item/gg7");
        Res.rgItem[113] = Res.leaner.findRegion("item/r0");
        Res.rgItem[114] = Res.leaner.findRegion("item/r1");
        Res.rgItem[115] = Res.leaner.findRegion("item/r2");
        Res.rgItem[116] = Res.leaner.findRegion("item/r3");
        Res.rgItem[117] = Res.leaner.findRegion("item/r4");
        Res.rgItem[118] = Res.leaner.findRegion("item/r5");
        Res.rgItem[119] = Res.leaner.findRegion("item/r6");
        Res.rgItem[120] = Res.leaner.findRegion("item/r7");
        Res.rgItem[121] = Res.leaner.findRegion("item/rr0");
        Res.rgItem[122] = Res.leaner.findRegion("item/rr1");
        Res.rgItem[123] = Res.leaner.findRegion("item/rr2");
        Res.rgItem[124] = Res.leaner.findRegion("item/rr3");
        Res.rgItem[125] = Res.leaner.findRegion("item/rr4");
        Res.rgItem[126] = Res.leaner.findRegion("item/rr5");
        Res.rgItem[127] = Res.leaner.findRegion("item/rr6");
        Res.rgItem[128] = Res.leaner.findRegion("item/rr7");
        Res.rgItem[129] = Res.leaner.findRegion("item/s0");
        Res.rgItem[130] = Res.leaner.findRegion("item/s1");
        Res.rgItem[131] = Res.leaner.findRegion("item/s2");
        Res.rgItem[132] = Res.leaner.findRegion("item/s3");
        Res.rgItem[133] = Res.leaner.findRegion("item/s4");
        Res.rgItem[134] = Res.leaner.findRegion("item/s5");
        Res.rgItem[135] = Res.leaner.findRegion("item/s6");
        Res.rgItem[136] = Res.leaner.findRegion("item/s7");
        Res.rgItem[137] = Res.leaner.findRegion("item/ss0");
        Res.rgItem[138] = Res.leaner.findRegion("item/ss1");
        Res.rgItem[139] = Res.leaner.findRegion("item/ss2");
        Res.rgItem[140] = Res.leaner.findRegion("item/ss3");
        Res.rgItem[141] = Res.leaner.findRegion("item/ss4");
        Res.rgItem[142] = Res.leaner.findRegion("item/ss5");
        Res.rgItem[143] = Res.leaner.findRegion("item/ss6");
        Res.rgItem[144] = Res.leaner.findRegion("item/ss7");
        Res.rgItem[145] = Res.leaner.findRegion("item/w0");
        Res.rgItem[146] = Res.leaner.findRegion("item/w1");
        Res.rgItem[147] = Res.leaner.findRegion("item/w2");
        Res.rgItem[148] = Res.leaner.findRegion("item/w3");
        Res.rgItem[149] = Res.leaner.findRegion("item/w4");
        Res.rgItem[150] = Res.leaner.findRegion("item/w5");
        Res.rgItem[151] = Res.leaner.findRegion("item/w6");
        Res.rgItem[152] = Res.leaner.findRegion("item/w7");
        Res.rgItem[153] = Res.leaner.findRegion("item/ww0");
        Res.rgItem[154] = Res.leaner.findRegion("item/ww1");
        Res.rgItem[155] = Res.leaner.findRegion("item/ww2");
        Res.rgItem[156] = Res.leaner.findRegion("item/ww3");
        Res.rgItem[157] = Res.leaner.findRegion("item/ww4");
        Res.rgItem[158] = Res.leaner.findRegion("item/ww5");
        Res.rgItem[159] = Res.leaner.findRegion("item/ww6");
        Res.rgItem[160] = Res.leaner.findRegion("item/ww7");
        Res.rgItem[161] = Res.leaner.findRegion("item/x0");
        Res.rgItem[162] = Res.leaner.findRegion("item/x1");
        Res.rgItem[163] = Res.leaner.findRegion("item/x2");
        Res.rgItem[164] = Res.leaner.findRegion("item/x3");
        Res.rgItem[165] = Res.leaner.findRegion("item/x4");
        Res.rgItem[166] = Res.leaner.findRegion("item/x5");
        Res.rgItem[167] = Res.leaner.findRegion("item/x6");
        Res.rgItem[168] = Res.leaner.findRegion("item/x7");
        Res.rgItem[169] = Res.leaner.findRegion("item/xx0");
        Res.rgItem[170] = Res.leaner.findRegion("item/xx1");
        Res.rgItem[171] = Res.leaner.findRegion("item/xx2");
        Res.rgItem[172] = Res.leaner.findRegion("item/xx3");
        Res.rgItem[173] = Res.leaner.findRegion("item/xx4");
        Res.rgItem[174] = Res.leaner.findRegion("item/xx5");
        Res.rgItem[175] = Res.leaner.findRegion("item/xx6");
        Res.rgItem[176] = Res.leaner.findRegion("item/y0");
        Res.rgItem[177] = Res.leaner.findRegion("item/y1");
        Res.rgItem[178] = Res.leaner.findRegion("item/y2");
        Res.rgItem[179] = Res.leaner.findRegion("item/y3");
        Res.rgItem[180] = Res.leaner.findRegion("item/y4");
        Res.rgItem[181] = Res.leaner.findRegion("item/y5");
        Res.rgItem[182] = Res.leaner.findRegion("item/y6");
        Res.rgItem[183] = Res.leaner.findRegion("item/y7");
        Res.rgItem[184] = Res.leaner.findRegion("item/yy0");
        Res.rgItem[185] = Res.leaner.findRegion("item/yy1");
        Res.rgItem[186] = Res.leaner.findRegion("item/yy2");
        Res.rgItem[187] = Res.leaner.findRegion("item/yy3");
        Res.rgItem[188] = Res.leaner.findRegion("item/yy4");
        Res.rgItem[189] = Res.leaner.findRegion("item/yy5");
        Res.rgItem[190] = Res.leaner.findRegion("item/yy6");
        Res.rgItem[191] = Res.leaner.findRegion("item/yy7");
        Res.rgItem[192] = Res.leaner.findRegion("item/xx7");
        Res.rgItem[193] = Res.leaner.findRegion("item/xx8");
        Res.rgItem[194] = Res.leaner.findRegion("item/xx9");
        Res.rgItem[195] = Res.leaner.findRegion("item/xx10");
        Res.rgItem[196] = Res.leaner.findRegion("item/xx11");
        Res.rgPrize = new TextureRegion[v12];
        Res.rgPrize[0] = Res.leaner.findRegion("item/p1000");
        Res.rgPrize[1] = Res.leaner.findRegion("item/p2000");
        Res.rgPrize[v11] = Res.leaner.findRegion("item/p3000");
        Res.imgPrize = new Prize();
        Res.imgPrize.setSize(Util.getWidth(256f), Util.getHeight(64f));
        Res.imgPrize.setPosition(Util.getLeft(0f), Util.getTop(0f, 0f));
        Prize v0 = Res.imgPrize;
        String[] v2 = new String[v12];
        v2[0] = "p1000";
        v2[1] = "p2000";
        v2[v11] = "p3000";
        v0.setNames(v2);
        Res.imgPrize.setImage("p1000");
        Res.imgPrize.visible = false;
        int v10;
        for(v10 = 0; v10 < v12; ++v10) {
            Res.gfFish[v10] = new GiftFish(v11, 0.1f, 62);
            Res.gfFish[v10].setSize(Util.getWidth(128f), Util.getHeight(128f));
            Res.gfFish[v10].setPart(0, "f", 1, 0.05f, new int[]{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30});
            Res.gfFish[v10].setPart(1, "v", 32, 0.05f, new int[]{32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61});
            Res.gfFish[v10].visible = false;
            Res.gfFish[v10].bHideWhenStop = true;
            Res.gfFish[v10].play(false);
        }

        Res.rgSpinAll = new TextureRegion[26];
        Res.rgSpinAll[0] = Res.leaner.findRegion("item/cc0");
        Res.rgSpinAll[1] = Res.leaner.findRegion("item/cc1");
        Res.rgSpinAll[v11] = Res.leaner.findRegion("item/cc2");
        Res.rgSpinAll[v12] = Res.leaner.findRegion("item/cc3");
        Res.rgSpinAll[4] = Res.leaner.findRegion("item/cc4");
        Res.rgSpinAll[5] = Res.leaner.findRegion("item/cc5");
        Res.rgSpinAll[6] = Res.leaner.findRegion("item/cc6");
        Res.rgSpinAll[7] = Res.leaner.findRegion("item/cc7");
        Res.rgSpinAll[8] = Res.leaner.findRegion("item/cc8");
        Res.rgSpinAll[9] = Res.leaner.findRegion("item/cc9");
        Res.rgSpinAll[10] = Res.leaner.findRegion("item/cc10");
        Res.rgSpinAll[v13] = Res.leaner.findRegion("item/spinall0");
        Res.rgSpinAll[12] = Res.leaner.findRegion("item/spinall1");
        Res.rgSpinAll[13] = Res.leaner.findRegion("item/spinall2");
        Res.rgSpinAll[14] = Res.leaner.findRegion("item/spinall3");
        Res.rgSpinAll[15] = Res.leaner.findRegion("item/spinall4");
        Res.rgSpinAll[16] = Res.leaner.findRegion("item/spinall5");
        Res.rgSpinAll[17] = Res.leaner.findRegion("item/spinall6");
        Res.rgSpinAll[18] = Res.leaner.findRegion("item/spinall7");
        Res.rgSpinAll[19] = Res.leaner.findRegion("item/spinall8");
        Res.rgSpinAll[20] = Res.leaner.findRegion("item/spinall9");
        Res.rgSpinAll[21] = Res.leaner.findRegion("item/spinall10");
        Res.rgSpinAll[22] = Res.leaner.findRegion("item/spinall11");
        Res.rgSpinAll[23] = Res.leaner.findRegion("item/spinall12");
        Res.rgSpinAll[24] = Res.leaner.findRegion("item/spinall13");
        Res.rgSpinAll[25] = Res.leaner.findRegion("item/spinall14");
        for(v10 = 0; v10 < v12; ++v10) {
            Res.spinAll[v10] = new SpinAll(v11, 0.1f, 26);
            Res.spinAll[v10].setSize(Util.getWidth(256f), Util.getHeight(256f));
            Res.spinAll[v10].setPart(0, "k", 10, 0.1f, new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10});
            Res.spinAll[v10].setPart(1, "s", v13, 0.05f, new int[]{11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25});
            Res.spinAll[v10].visible = false;
            Res.spinAll[v10].bHideWhenStop = true;
            Res.spinAll[v10].play(false);
        }
    }

    private static void iniJellyFish() {
        int v8 = 22;
        Res.rgJellyfish[0] = Res.leaner.findRegion("jellyfish/jellyfish0");
        Res.rgJellyfish[1] = Res.leaner.findRegion("jellyfish/jellyfish1");
        Res.rgJellyfish[2] = Res.leaner.findRegion("jellyfish/jellyfish2");
        Res.rgJellyfish[3] = Res.leaner.findRegion("jellyfish/jellyfish3");
        Res.rgJellyfish[4] = Res.leaner.findRegion("jellyfish/jellyfish4");
        Res.rgJellyfish[5] = Res.leaner.findRegion("jellyfish/jellyfish5");
        Res.rgJellyfish[6] = Res.leaner.findRegion("jellyfish/jellyfish6");
        Res.rgJellyfish[7] = Res.leaner.findRegion("jellyfish/jellyfish7");
        Res.rgJellyfish[8] = Res.leaner.findRegion("jellyfish/jellyfish8");
        Res.rgJellyfish[9] = Res.leaner.findRegion("jellyfish/jellyfish9");
        Res.rgJellyfish[10] = Res.leaner.findRegion("jellyfish/jellyfish10");
        Res.rgJellyfish[11] = Res.leaner.findRegion("jellyfish/jellyfish11");
        Res.rgJellyfish[12] = Res.leaner.findRegion("jellyfish/jellyfish12");
        Res.rgJellyfish[13] = Res.leaner.findRegion("jellyfish/jellyfish13");
        Res.rgJellyfish[14] = Res.leaner.findRegion("jellyfish/jellyfish14");
        Res.rgJellyfish[15] = Res.leaner.findRegion("jellyfish/jellyfish15");
        Res.rgJellyfish[16] = Res.leaner.findRegion("jellyfish/jellyfish16");
        Res.rgJellyfish[17] = Res.leaner.findRegion("jellyfish/jellyfish17");
        Res.rgJellyfish[18] = Res.leaner.findRegion("jellyfish/jellyfish18");
        Res.rgJellyfish[19] = Res.leaner.findRegion("jellyfish/jellyfish19");
        Res.rgJellyfish[20] = Res.leaner.findRegion("jellyfish/jellyfish20");
        Res.rgJellyfish[21] = Res.leaner.findRegion("jellyfish/jellyfish21");
        Res.rgJellyfish[v8] = Res.leaner.findRegion("jellyfish/jellyfish22");
        Res.rgJellyfish[23] = Res.leaner.findRegion("jellyfish/jellyfish23");
        Res.rgJellyfish[24] = Res.leaner.findRegion("jellyfish/jellyfish24");
        Res.rgJellyfish[25] = Res.leaner.findRegion("jellyfish/jellyfish25");
        Res.rgJellyfish[26] = Res.leaner.findRegion("jellyfish/jellyfish26");
        Res.rgJellyfish[27] = Res.leaner.findRegion("jellyfish/jellyfish27");
        Res.rgJellyfish[28] = Res.leaner.findRegion("jellyfish/jellyfish28");
        Res.rgJellyfish[29] = Res.leaner.findRegion("jellyfish/jellyfish29");
        int v6;
        for(v6 = 0; v6 < Res.jellyfish.length; ++v6) {
            Res.jellyfish[v6] = new Jellyfish(1, 0.5f, v8);
            Res.jellyfish[v6].setSize(Util.getWidth(128f), Util.getHeight(256f));
            Res.jellyfish[v6].setPart(0, "1", 0, 0.05f, new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29});
            Res.jellyfish[v6].visible = false;
            Res.jellyfish[v6].play(false);
        }
    }

    private static void iniLine() {
        TextureRegion[] v3 = new TextureRegion[15];
        v3[0] = Res.leaner.findRegion("line/line0");
        v3[1] = Res.leaner.findRegion("line/line1");
        v3[2] = Res.leaner.findRegion("line/line2");
        v3[3] = Res.leaner.findRegion("line/line3");
        v3[4] = Res.leaner.findRegion("line/line4");
        v3[5] = Res.leaner.findRegion("line/line5");
        v3[6] = Res.leaner.findRegion("line/line6");
        v3[7] = Res.leaner.findRegion("line/line7");
        v3[8] = Res.leaner.findRegion("line/line8");
        v3[9] = Res.leaner.findRegion("line/line9");
        v3[10] = Res.leaner.findRegion("line/line10");
        v3[11] = Res.leaner.findRegion("line/line11");
        v3[12] = Res.leaner.findRegion("line/line12");
        v3[13] = Res.leaner.findRegion("line/line13");
        v3[14] = Res.leaner.findRegion("line/line14");
        Res.aniLine = new Ani(1, 0.1f, v3);
        Res.aniLine.setSize(Util.getWidth(1050f), Util.getHeight(32f));
        Res.aniLine.play(false);
        Res.aniLine.visible = false;
        v3 = new TextureRegion[4];
        v3[0] = Res.leaner.findRegion("line/BLT1");
        v3[1] = Res.leaner.findRegion("line/BLT0");
        v3[2] = Res.leaner.findRegion("line/RLT1");
        v3[3] = Res.leaner.findRegion("line/RLT0");
        Res.aniLineLampLT = new Ani(2, 0.1f, v3);
        v3 = new TextureRegion[4];
        v3[0] = Res.leaner.findRegion("line/BLC1");
        v3[1] = Res.leaner.findRegion("line/BLC0");
        v3[2] = Res.leaner.findRegion("line/RLC1");
        v3[3] = Res.leaner.findRegion("line/RLC0");
        Res.aniLineLampLC = new Ani(2, 0.1f, v3);
        v3 = new TextureRegion[4];
        v3[0] = Res.leaner.findRegion("line/BLC1");
        v3[1] = Res.leaner.findRegion("line/BLB0");
        v3[2] = Res.leaner.findRegion("line/RLB1");
        v3[3] = Res.leaner.findRegion("line/RLB0");
        Res.aniLineLampLB = new Ani(2, 0.1f, v3);
        v3 = new TextureRegion[4];
        v3[0] = Res.leaner.findRegion("line/BRT1");
        v3[1] = Res.leaner.findRegion("line/BRT0");
        v3[2] = Res.leaner.findRegion("line/RRT1");
        v3[3] = Res.leaner.findRegion("line/RRT0");
        Res.aniLineLampRT = new Ani(2, 0.1f, v3);
        v3 = new TextureRegion[4];
        v3[0] = Res.leaner.findRegion("line/BRC1");
        v3[1] = Res.leaner.findRegion("line/BRC0");
        v3[2] = Res.leaner.findRegion("line/RRC1");
        v3[3] = Res.leaner.findRegion("line/RRC0");
        Res.aniLineLampRC = new Ani(2, 0.1f, v3);
        v3 = new TextureRegion[4];
        v3[0] = Res.leaner.findRegion("line/BRC1");
        v3[1] = Res.leaner.findRegion("line/BRB0");
        v3[2] = Res.leaner.findRegion("line/RRB1");
        v3[3] = Res.leaner.findRegion("line/RRB0");
        Res.aniLineLampRB = new Ani(2, 0.1f, v3);
        Res.aniLineLampLT.setSize(Util.getWidth(64f), Util.getHeight(64f));
        Res.aniLineLampLT.setPart(0, "B", 0, 0.5f, new int[]{0, 1});
        Res.aniLineLampLT.setPart(1, "R", 0, 0.5f, new int[]{2, 3});
        Res.aniLineLampLT.setPosition(Util.getLeft(0f), Util.getTop(853f, 0f));
        Res.aniLineLampLT.visible = false;
        Res.aniLineLampLT.play(false);
        Res.aniLineLampLC.setSize(Util.getWidth(64f), Util.getHeight(128f));
        Res.aniLineLampLC.setPart(0, "B", 0, 0.5f, new int[]{0, 1});
        Res.aniLineLampLC.setPart(1, "R", 0, 0.5f, new int[]{2, 3});
        Res.aniLineLampLC.setPosition(Util.getLeft(0f), Util.getTop(1008f, 0f));
        Res.aniLineLampLC.visible = false;
        Res.aniLineLampLC.play(false);
        Res.aniLineLampLB.setSize(Util.getWidth(64f), Util.getHeight(64f));
        Res.aniLineLampLB.setPart(0, "B", 0, 0.5f, new int[]{0, 1});
        Res.aniLineLampLB.setPart(1, "R", 0, 0.5f, new int[]{2, 3});
        Res.aniLineLampLB.setPosition(Util.getLeft(0f), Util.getTop(1100f, 0f));
        Res.aniLineLampLB.visible = false;
        Res.aniLineLampLB.play(false);
        Res.aniLineLampRT.setSize(Util.getWidth(64f), Util.getHeight(64f));
        Res.aniLineLampRT.setPart(0, "B", 0, 0.5f, new int[]{0, 1});
        Res.aniLineLampRT.setPart(1, "R", 0, 0.5f, new int[]{2, 3});
        Res.aniLineLampRT.setPosition(Util.getLeft(710f), Util.getTop(853f, 0f));
        Res.aniLineLampRT.visible = false;
        Res.aniLineLampRT.play(false);
        Res.aniLineLampRC.setSize(Util.getWidth(64f), Util.getHeight(128f));
        Res.aniLineLampRC.setPart(0, "B", 0, 0.5f, new int[]{0, 1});
        Res.aniLineLampRC.setPart(1, "R", 0, 0.5f, new int[]{2, 3});
        Res.aniLineLampRC.setPosition(Util.getLeft(710f), Util.getTop(1008f, 0f));
        Res.aniLineLampRC.visible = false;
        Res.aniLineLampRC.play(false);
        Res.aniLineLampRB.setSize(Util.getWidth(64f), Util.getHeight(64f));
        Res.aniLineLampRB.setPart(0, "B", 0, 0.5f, new int[]{0, 1});
        Res.aniLineLampRB.setPart(1, "R", 0, 0.5f, new int[]{2, 3});
        Res.aniLineLampRB.setPosition(Util.getLeft(710f), Util.getTop(1100f, 0f));
        Res.aniLineLampRB.visible = false;
        Res.aniLineLampRB.play(false);
    }

    private static void iniMachine() {
        float v12 = 258f;
        float v11 = 78f;
        int v10 = 2;
        Res.rgMachineBack[0] = Res.leaner.findRegion("machine_back_black");
        Res.rgMachineBack[1] = Res.leaner.findRegion("machine_back_green");
        Res.rgMachineBack[v10] = Res.leaner.findRegion("machine_back_yellow");
        Res.rgMachineBack[3] = Res.leaner.findRegion("machine_back_red");
        Res.rgMachineScreen[0] = Res.leaner.findRegion("machine_screen0");
        Res.rgMachineScreen[1] = Res.leaner.findRegion("machine_screen1");
        Res.rgMachineScreen[v10] = Res.leaner.findRegion("machine_screen2");
        int v8;
        for(v8 = 0; v8 < 12; ++v8) {
            Res.machineBack[v8] = new MachineBack();
            Res.machineBack[v8].setSize(Util.getWidth(175f), Util.getHeight(218f));
            MachineBack v0 = Res.machineBack[v8];
            String[] v2 = new String[4];
            v2[0] = "0";
            v2[1] = "1";
            v2[v10] = "2";
            v2[3] = "3";
            v0.setNames(v2);
            Res.machineBack[v8].setImage("0");
            Res.machineScreen[v8] = new MachineScreen(v10, 0.5f, 3);
            Res.machineScreen[v8].setSize(Util.getWidth(175f), Util.getHeight(218f));
            MachineScreen v0_1 = Res.machineScreen[v8];
            int[] v5 = new int[1];
            v5[0] = 0;
            v0_1.setPart(0, "0", 0, 1f, v5);
            Res.machineScreen[v8].setPart(1, "1", 0, 0.5f, new int[]{1, 2});
            Res.machineScreen[v8].play(false);
        }

        Res.machineBack[0].setPosition(Util.getLeft(v11), Util.getTop(203f, Res.machineBack[0].height));
        Res.machineBack[1].setPosition(Util.getLeft(v12), Util.getTop(203f, Res.machineBack[1].height));
        Res.machineBack[v10].setPosition(Util.getLeft(439f), Util.getTop(203f, Res.machineBack[v10].height));
        Res.machineBack[3].setPosition(Util.getLeft(v11), Util.getTop(429f, Res.machineBack[0].height));
        Res.machineBack[4].setPosition(Util.getLeft(v12), Util.getTop(429f, Res.machineBack[1].height));
        Res.machineBack[5].setPosition(Util.getLeft(439f), Util.getTop(429f, Res.machineBack[v10].height));
        Res.machineBack[6].setPosition(Util.getLeft(v11), Util.getTop(656f, Res.machineBack[0].height));
        Res.machineBack[7].setPosition(Util.getLeft(v12), Util.getTop(656f, Res.machineBack[1].height));
        Res.machineBack[8].setPosition(Util.getLeft(439f), Util.getTop(656f, Res.machineBack[v10].height));
        Res.machineBack[9].setPosition(Util.getLeft(v11), Util.getTop(882f, Res.machineBack[0].height));
        Res.machineBack[10].setPosition(Util.getLeft(v12), Util.getTop(882f, Res.machineBack[1].height));
        Res.machineBack[11].setPosition(Util.getLeft(439f), Util.getTop(882f, Res.machineBack[v10].height));
        Res.machineScreen[0].setPosition(Util.getLeft(v11), Util.getTop(203f, Res.machineScreen[0].height));
        Res.machineScreen[1].setPosition(Util.getLeft(v12), Util.getTop(203f, Res.machineScreen[1].height));
        Res.machineScreen[v10].setPosition(Util.getLeft(439f), Util.getTop(203f, Res.machineScreen[v10].height));
        Res.machineScreen[3].setPosition(Util.getLeft(v11), Util.getTop(429f, Res.machineScreen[0].height));
        Res.machineScreen[4].setPosition(Util.getLeft(v12), Util.getTop(429f, Res.machineScreen[1].height));
        Res.machineScreen[5].setPosition(Util.getLeft(439f), Util.getTop(429f, Res.machineScreen[v10].height));
        Res.machineScreen[6].setPosition(Util.getLeft(v11), Util.getTop(656f, Res.machineScreen[0].height));
        Res.machineScreen[7].setPosition(Util.getLeft(v12), Util.getTop(656f, Res.machineScreen[1].height));
        Res.machineScreen[8].setPosition(Util.getLeft(439f), Util.getTop(656f, Res.machineScreen[v10].height));
        Res.machineScreen[9].setPosition(Util.getLeft(v11), Util.getTop(882f, Res.machineScreen[0].height));
        Res.machineScreen[10].setPosition(Util.getLeft(v12), Util.getTop(882f, Res.machineScreen[1].height));
        Res.machineScreen[11].setPosition(Util.getLeft(439f), Util.getTop(882f, Res.machineScreen[v10].height));
    }

    private static void iniMenu() {
        TextureRegion[] v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("btn_machine_on");
        Res.imgBtnMachineOn = new Img(v1);
        Res.imgBtnMachineOn.setSize(Util.getWidth(50f), Util.getHeight(160f));
        Res.imgBtnMachineOn.setPosition(Util.getLeft(665f), Util.getTop(228f, Res.imgBtnMachineOn.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("btn_charge_on");
        Res.imgBtnChargeOn = new Img(v1);
        Res.imgBtnChargeOn.setSize(Util.getWidth(50f), Util.getHeight(160f));
        Res.imgBtnChargeOn.setPosition(Util.getLeft(665f), Util.getTop(423f, Res.imgBtnChargeOn.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("btn_exchange_on");
        Res.imgBtnExchangeOn = new Img(v1);
        Res.imgBtnExchangeOn.setSize(Util.getWidth(50f), Util.getHeight(160f));
        Res.imgBtnExchangeOn.setPosition(Util.getLeft(665f), Util.getTop(616f, Res.imgBtnExchangeOn.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("btn_help_on");
        Res.imgBtnHelpOn = new Img(v1);
        Res.imgBtnHelpOn.setSize(Util.getWidth(50f), Util.getHeight(160f));
        Res.imgBtnHelpOn.setPosition(Util.getLeft(665f), Util.getTop(810f, Res.imgBtnHelpOn.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("btn_ask_on");
        Res.imgBtnAskOn = new Img(v1);
        Res.imgBtnAskOn.setSize(Util.getWidth(50f), Util.getHeight(160f));
        Res.imgBtnAskOn.setPosition(Util.getLeft(665f), Util.getTop(1005f, Res.imgBtnAskOn.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("black90");
        Res.imgBtnCloseMenu = new Img(v1);
        Res.imgBtnCloseMenu.setSize(Util.getWidth(130f), Util.getHeight(120f));
        Res.imgBtnCloseMenu.setPosition(Util.getLeft(600f), Util.getTop(26f, Res.imgBtnCloseMenu.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("channel_left");
        Res.imgChannelLeft = new Img(v1);
        Res.imgChannelLeft.setSize(Util.getWidth(223f), Util.getHeight(118f));
        Res.imgChannelLeft.setPosition(Util.getLeft(105f), Util.getTop(1104f, Res.imgChannelLeft.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("channel_right");
        Res.imgChannelRight = new Img(v1);
        Res.imgChannelRight.setSize(Util.getWidth(223f), Util.getHeight(118f));
        Res.imgChannelRight.setPosition(Util.getLeft(338f), Util.getTop(1104f, Res.imgChannelRight.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("btn_ask_input");
        Res.imgBtnAskInput = new Img(v1);
        Res.imgBtnAskInput.setSize(Util.getWidth(260f), Util.getHeight(98f));
        Res.imgBtnAskInput.setPosition(Util.getLeft(210f), Util.getTop(1096f, Res.imgBtnAskInput.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("black90");
        Res.imgBtnExchangeBank = new Img(v1);
        Res.imgBtnExchangeBank.setSize(Util.getWidth(350f), Util.getHeight(60f));
        Res.imgBtnExchangeBank.setPosition(Util.getLeft(245f), Util.getTop(678f, Res.imgBtnExchangeBank.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("black90");
        Res.imgBtnExchangeOwner = new Img(v1);
        Res.imgBtnExchangeOwner.setSize(Util.getWidth(350f), Util.getHeight(60f));
        Res.imgBtnExchangeOwner.setPosition(Util.getLeft(245f), Util.getTop(789f, Res.imgBtnExchangeOwner.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("black90");
        Res.imgBtnMoneyMan = new Img(v1);
        Res.imgBtnMoneyMan.setSize(Util.getWidth(350f), Util.getHeight(60f));
        Res.imgBtnMoneyMan.setPosition(Util.getLeft(245f), Util.getTop(470f, Res.imgBtnMoneyMan.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("back_charge");
        Res.imgBackCharge = new Img(v1);
        Res.imgBackCharge.setSize(Util.getWidth(560f), Util.getHeight(784f));
        Res.imgBackCharge.setPosition(Util.getLeft(60f), Util.getTop(221f, Res.imgBackCharge.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("btn_charge");
        Res.imgBtnCharge = new Img(v1);
        Res.imgBtnCharge.setSize(Util.getWidth(260f), Util.getHeight(98f));
        Res.imgBtnCharge.setPosition(Util.getLeft(210f), Util.getTop(1069f, Res.imgBtnCharge.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("back_exchange");
        Res.imgBackExchange = new Img(v1);
        Res.imgBackExchange.setSize(Util.getWidth(560f), Util.getHeight(784f));
        Res.imgBackExchange.setPosition(Util.getLeft(60f), Util.getTop(221f, Res.imgBackExchange.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("btn_exchange");
        Res.imgBtnExchange = new Img(v1);
        Res.imgBtnExchange.setSize(Util.getWidth(260f), Util.getHeight(98f));
        Res.imgBtnExchange.setPosition(Util.getLeft(210f), Util.getTop(1069f, Res.imgBtnExchange.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("back_help");
        Res.imgBackHelp = new Img(v1);
        Res.imgBackHelp.setSize(Util.getWidth(557f), Util.getHeight(100f));
        Res.imgBackHelp.setPosition(Util.getLeft(61f), Util.getTop(213f, Res.imgBackHelp.height));
        v1 = new TextureRegion[1];
        v1[0] = Res.leaner.findRegion("back_ask");
        Res.imgBackAsk = new Img(v1);
        Res.imgBackAsk.setSize(Util.getWidth(557f), Util.getHeight(100f));
        Res.imgBackAsk.setPosition(Util.getLeft(61f), Util.getTop(213f, Res.imgBackAsk.height));
    }

    private static void iniMermaid() {
        TextureRegion[] v2 = new TextureRegion[15];
        v2[0] = Res.leaner.findRegion("mermaid/mermaid0");
        v2[1] = Res.leaner.findRegion("mermaid/mermaid1");
        v2[2] = Res.leaner.findRegion("mermaid/mermaid2");
        v2[3] = Res.leaner.findRegion("mermaid/mermaid3");
        v2[4] = Res.leaner.findRegion("mermaid/mermaid4");
        v2[5] = Res.leaner.findRegion("mermaid/mermaid5");
        v2[6] = Res.leaner.findRegion("mermaid/mermaid6");
        v2[7] = Res.leaner.findRegion("mermaid/mermaid7");
        v2[8] = Res.leaner.findRegion("mermaid/mermaid8");
        v2[9] = Res.leaner.findRegion("mermaid/mermaid9");
        v2[10] = Res.leaner.findRegion("mermaid/mermaid10");
        v2[11] = Res.leaner.findRegion("mermaid/mermaid11");
        v2[12] = Res.leaner.findRegion("mermaid/mermaid12");
        v2[13] = Res.leaner.findRegion("mermaid/mermaid13");
        v2[14] = Res.leaner.findRegion("mermaid/mermaid14");
        Res.aniMermaid = new Ani(1, 0.1f, v2);
        Res.aniMermaid.setSize(Util.getWidth(400f), Util.getHeight(200f));
        Res.aniMermaid.setPosition(Util.XCenter(1000f, Res.aniMermaid.width), Util.YCenter(250f, Res.aniMermaid.height));
        Res.aniMermaid.play(false);
        Res.aniMermaid.visible = false;
    }

    private static void iniPin() {
        float v11 = 245f;
        float v10 = 380f;
        float v9 = 290f;
        float v8 = 200f;
        Res.rgPin[0] = Res.leaner.findRegion("pin/pin0");
        Res.rgPin[1] = Res.leaner.findRegion("pin/pin1");
        Res.rgPin[2] = Res.leaner.findRegion("pin/pin2");
        Res.rgPin[3] = Res.leaner.findRegion("pin/pin3");
        int v6;
        for(v6 = 0; v6 < Res.pin.length; ++v6) {
            Res.pin[v6] = new Pin(1, 0.58f, 4);
            Res.pin[v6].setSize(Util.getWidth(16f), Util.getHeight(16f));
            Res.pin[v6].setPart(0, "hit", 0, 0.58f, new int[]{2, 3});
            Res.pin[v6].half_height = Util.getHeight(8f);
            Res.pin[v6].half_width = Util.getWidth(8f);
            Res.pin[v6].visible = true;
            Res.pin[v6].play(true, "hit", 1);
        }

        Res.pin[0].setPosition(Util.getLeft(112f), Util.getTop(v8, 0f));
        Res.pin[1].setPosition(Util.getLeft(203f), Util.getTop(v8, 0f));
        Res.pin[2].setPosition(Util.getLeft(294f), Util.getTop(v8, 0f));
        Res.pin[3].setPosition(Util.getLeft(385f), Util.getTop(v8, 0f));
        Res.pin[4].setPosition(Util.getLeft(476f), Util.getTop(v8, 0f));
        Res.pin[5].setPosition(Util.getLeft(567f), Util.getTop(v8, 0f));
        Res.pin[6].setPosition(Util.getLeft(658f), Util.getTop(v8, 0f));
        Res.pin[7].setPosition(Util.getLeft(157f), Util.getTop(v11, 0f));
        Res.pin[8].setPosition(Util.getLeft(248f), Util.getTop(v11, 0f));
        Res.pin[9].setPosition(Util.getLeft(339f), Util.getTop(v11, 0f));
        Res.pin[10].setPosition(Util.getLeft(430f), Util.getTop(v11, 0f));
        Res.pin[11].setPosition(Util.getLeft(521f), Util.getTop(v11, 0f));
        Res.pin[12].setPosition(Util.getLeft(615f), Util.getTop(v11, 0f));
        Res.pin[13].setPosition(Util.getLeft(112f), Util.getTop(v9, 0f));
        Res.pin[14].setPosition(Util.getLeft(203f), Util.getTop(v9, 0f));
        Res.pin[15].setPosition(Util.getLeft(294f), Util.getTop(v9, 0f));
        Res.pin[16].setPosition(Util.getLeft(385f), Util.getTop(v9, 0f));
        Res.pin[17].setPosition(Util.getLeft(476f), Util.getTop(v9, 0f));
        Res.pin[18].setPosition(Util.getLeft(567f), Util.getTop(v9, 0f));
        Res.pin[19].setPosition(Util.getLeft(658f), Util.getTop(v9, 0f));
        Res.pin[20].setPosition(Util.getLeft(157f), Util.getTop(335f, 0f));
        Res.pin[21].setPosition(Util.getLeft(248f), Util.getTop(335f, 0f));
        Res.pin[22].setPosition(Util.getLeft(339f), Util.getTop(335f, 0f));
        Res.pin[23].setPosition(Util.getLeft(430f), Util.getTop(335f, 0f));
        Res.pin[24].setPosition(Util.getLeft(521f), Util.getTop(335f, 0f));
        Res.pin[25].setPosition(Util.getLeft(615f), Util.getTop(335f, 0f));
        Res.pin[26].setPosition(Util.getLeft(112f), Util.getTop(v10, 0f));
        Res.pin[27].setPosition(Util.getLeft(203f), Util.getTop(v10, 0f));
        Res.pin[28].setPosition(Util.getLeft(294f), Util.getTop(v10, 0f));
        Res.pin[29].setPosition(Util.getLeft(385f), Util.getTop(v10, 0f));
        Res.pin[30].setPosition(Util.getLeft(476f), Util.getTop(v10, 0f));
        Res.pin[31].setPosition(Util.getLeft(567f), Util.getTop(v10, 0f));
        Res.pin[32].setPosition(Util.getLeft(658f), Util.getTop(v10, 0f));
    }

    private static void iniShark() {
        Res.rgSharkl[0] = Res.leaner.findRegion("sharkl/sharkl0");
        Res.rgSharkl[1] = Res.leaner.findRegion("sharkl/sharkl1");
        Res.rgSharkl[2] = Res.leaner.findRegion("sharkl/sharkl2");
        Res.rgSharkl[3] = Res.leaner.findRegion("sharkl/sharkl3");
        Res.rgSharkl[4] = Res.leaner.findRegion("sharkl/sharkl4");
        Res.rgSharkl[5] = Res.leaner.findRegion("sharkl/sharkl5");
        Res.rgSharkl[6] = Res.leaner.findRegion("sharkl/sharkl6");
        Res.rgSharkl[7] = Res.leaner.findRegion("sharkl/sharkl7");
        Res.rgSharkl[8] = Res.leaner.findRegion("sharkl/sharkl8");
        Res.rgSharkl[9] = Res.leaner.findRegion("sharkl/sharkl9");
        Res.rgSharkl[10] = Res.leaner.findRegion("sharkl/sharkl10");
        Res.rgSharkl[11] = Res.leaner.findRegion("sharkl/sharkl11");
        Res.rgSharkl[12] = Res.leaner.findRegion("sharkl/sharkl12");
        Res.rgSharkl[13] = Res.leaner.findRegion("sharkl/sharkl13");
        Res.rgSharkl[14] = Res.leaner.findRegion("sharkl/sharkl14");
        Res.rgSharkl[15] = Res.leaner.findRegion("sharkl/sharkl15");
        Res.rgSharkl[16] = Res.leaner.findRegion("sharkl/sharkl16");
        Res.rgSharkl[17] = Res.leaner.findRegion("sharkl/sharkl17");
        Res.rgSharkl[18] = Res.leaner.findRegion("sharkl/sharkl18");
        Res.rgSharkl[19] = Res.leaner.findRegion("sharkl/sharkl19");
        Res.rgSharkl[20] = Res.leaner.findRegion("sharkl/sharkl20");
        Res.rgSharkl[21] = Res.leaner.findRegion("sharkl/sharkl21");
        Res.rgSharkl[22] = Res.leaner.findRegion("sharkl/sharkl22");
        Res.rgSharkl[23] = Res.leaner.findRegion("sharkl/sharkl23");
        Res.rgSharkl[24] = Res.leaner.findRegion("sharkl/sharkl24");
        Res.rgSharkl[25] = Res.leaner.findRegion("sharkl/sharkl25");
        Res.rgSharkl[26] = Res.leaner.findRegion("sharkl/sharkl26");
        Res.rgSharkl[27] = Res.leaner.findRegion("sharkl/sharkl27");
        Res.rgSharkl[28] = Res.leaner.findRegion("sharkl/sharkl28");
        Res.rgSharkl[29] = Res.leaner.findRegion("sharkl/sharkl29");
        Res.rgSharkl[30] = Res.leaner.findRegion("sharkl/sharkl30");
        Res.rgSharkl[31] = Res.leaner.findRegion("sharkl/sharkl31");
        Res.rgSharkl[32] = Res.leaner.findRegion("sharkl/sharkl32");
        Res.rgSharkl[33] = Res.leaner.findRegion("sharkl/sharkl33");
        Res.rgSharkl[34] = Res.leaner.findRegion("sharkl/sharkl34");
        Res.rgSharkl[35] = Res.leaner.findRegion("sharkl/sharkl35");
        Res.rgSharkl[36] = Res.leaner.findRegion("sharkl/sharkl36");
        Res.rgSharkl[37] = Res.leaner.findRegion("sharkl/sharkl37");
        Res.rgSharkr[0] = Res.leaner.findRegion("sharkr/sharkr0");
        Res.rgSharkr[1] = Res.leaner.findRegion("sharkr/sharkr1");
        Res.rgSharkr[2] = Res.leaner.findRegion("sharkr/sharkr2");
        Res.rgSharkr[3] = Res.leaner.findRegion("sharkr/sharkr3");
        Res.rgSharkr[4] = Res.leaner.findRegion("sharkr/sharkr4");
        Res.rgSharkr[5] = Res.leaner.findRegion("sharkr/sharkr5");
        Res.rgSharkr[6] = Res.leaner.findRegion("sharkr/sharkr6");
        Res.rgSharkr[7] = Res.leaner.findRegion("sharkr/sharkr7");
        Res.rgSharkr[8] = Res.leaner.findRegion("sharkr/sharkr8");
        Res.rgSharkr[9] = Res.leaner.findRegion("sharkr/sharkr9");
        Res.rgSharkr[10] = Res.leaner.findRegion("sharkr/sharkr10");
        Res.rgSharkr[11] = Res.leaner.findRegion("sharkr/sharkr11");
        Res.rgSharkr[12] = Res.leaner.findRegion("sharkr/sharkr12");
        Res.rgSharkr[13] = Res.leaner.findRegion("sharkr/sharkr13");
        Res.rgSharkr[14] = Res.leaner.findRegion("sharkr/sharkr14");
        Res.rgSharkr[15] = Res.leaner.findRegion("sharkr/sharkr15");
        Res.rgSharkr[16] = Res.leaner.findRegion("sharkr/sharkr16");
        Res.shark[0] = new Shark(1, 0.5f, 38);
        Res.shark[0].setSize(Util.getWidth(256f), Util.getHeight(128f));
        Res.shark[0].setPart(0, "1", 37, 0.05f, new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37});
        Res.shark[0].visible = false;
        Res.shark[0].play(false);
        Res.shark[1] = new Shark(1, 0.5f, 25);
        Res.shark[1].setSize(Util.getWidth(256f), Util.getHeight(128f));
        Res.shark[1].setPart(0, "1", 0, 0.05f, new int[]{13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37});
        Res.shark[1].visible = false;
        Res.shark[1].play(false);
        Res.shark[2] = new Shark(1, 0.5f, 38);
        Res.shark[2].setSize(Util.getWidth(256f), Util.getHeight(128f));
        Res.shark[2].setPart(0, "1", 37, 0.05f, new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37});
        Res.shark[2].visible = false;
        Res.shark[2].play(false);
        Res.shark[3] = new Shark(1, 0.5f, 17);
        Res.shark[3].setSize(Util.getWidth(256f), Util.getHeight(128f));
        Res.shark[3].setPart(0, "1", 0, 0.1f, new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16});
        Res.shark[3].visible = false;
        Res.shark[3].play(false);
    }

    private static void iniTurtle() {
        float v9 = 0.5f;
        float v4 = 0.05f;
        int v8 = 22;
        Res.rgTurtleLeft[0] = Res.leaner.findRegion("turtle/turtlea0");
        Res.rgTurtleLeft[1] = Res.leaner.findRegion("turtle/turtlea1");
        Res.rgTurtleLeft[2] = Res.leaner.findRegion("turtle/turtlea2");
        Res.rgTurtleLeft[3] = Res.leaner.findRegion("turtle/turtlea3");
        Res.rgTurtleLeft[4] = Res.leaner.findRegion("turtle/turtlea4");
        Res.rgTurtleLeft[5] = Res.leaner.findRegion("turtle/turtlea5");
        Res.rgTurtleLeft[6] = Res.leaner.findRegion("turtle/turtlea6");
        Res.rgTurtleLeft[7] = Res.leaner.findRegion("turtle/turtlea7");
        Res.rgTurtleLeft[8] = Res.leaner.findRegion("turtle/turtlea8");
        Res.rgTurtleLeft[9] = Res.leaner.findRegion("turtle/turtlea9");
        Res.rgTurtleLeft[10] = Res.leaner.findRegion("turtle/turtlea10");
        Res.rgTurtleLeft[11] = Res.leaner.findRegion("turtle/turtlea11");
        Res.rgTurtleLeft[12] = Res.leaner.findRegion("turtle/turtlea12");
        Res.rgTurtleLeft[13] = Res.leaner.findRegion("turtle/turtlea13");
        Res.rgTurtleLeft[14] = Res.leaner.findRegion("turtle/turtlea14");
        Res.rgTurtleLeft[15] = Res.leaner.findRegion("turtle/turtlea15");
        Res.rgTurtleLeft[16] = Res.leaner.findRegion("turtle/turtlea16");
        Res.rgTurtleLeft[17] = Res.leaner.findRegion("turtle/turtlea17");
        Res.rgTurtleLeft[18] = Res.leaner.findRegion("turtle/turtlea18");
        Res.rgTurtleLeft[19] = Res.leaner.findRegion("turtle/turtlea19");
        Res.rgTurtleLeft[20] = Res.leaner.findRegion("turtle/turtlea20");
        Res.rgTurtleLeft[21] = Res.leaner.findRegion("turtle/turtlea21");
        Res.rgTurtleRight[0] = Res.leaner.findRegion("turtle/turtleb0");
        Res.rgTurtleRight[1] = Res.leaner.findRegion("turtle/turtleb1");
        Res.rgTurtleRight[2] = Res.leaner.findRegion("turtle/turtleb2");
        Res.rgTurtleRight[3] = Res.leaner.findRegion("turtle/turtleb3");
        Res.rgTurtleRight[4] = Res.leaner.findRegion("turtle/turtleb4");
        Res.rgTurtleRight[5] = Res.leaner.findRegion("turtle/turtleb5");
        Res.rgTurtleRight[6] = Res.leaner.findRegion("turtle/turtleb6");
        Res.rgTurtleRight[7] = Res.leaner.findRegion("turtle/turtleb7");
        Res.rgTurtleRight[8] = Res.leaner.findRegion("turtle/turtleb8");
        Res.rgTurtleRight[9] = Res.leaner.findRegion("turtle/turtleb9");
        Res.rgTurtleRight[10] = Res.leaner.findRegion("turtle/turtleb10");
        Res.rgTurtleRight[11] = Res.leaner.findRegion("turtle/turtleb11");
        Res.rgTurtleRight[12] = Res.leaner.findRegion("turtle/turtleb12");
        Res.rgTurtleRight[13] = Res.leaner.findRegion("turtle/turtleb13");
        Res.rgTurtleRight[14] = Res.leaner.findRegion("turtle/turtleb14");
        Res.rgTurtleRight[15] = Res.leaner.findRegion("turtle/turtleb15");
        Res.rgTurtleRight[16] = Res.leaner.findRegion("turtle/turtleb16");
        Res.rgTurtleRight[17] = Res.leaner.findRegion("turtle/turtleb17");
        Res.rgTurtleRight[18] = Res.leaner.findRegion("turtle/turtleb18");
        Res.rgTurtleRight[19] = Res.leaner.findRegion("turtle/turtleb19");
        Res.rgTurtleRight[20] = Res.leaner.findRegion("turtle/turtleb20");
        Res.rgTurtleRight[21] = Res.leaner.findRegion("turtle/turtleb21");
        int v6;
        for(v6 = 0; v6 < Res.turtleLeft.length; ++v6) {
            Res.turtleLeft[v6] = new Turtle(1, v9, v8);
            Res.turtleLeft[v6].setSize(Util.getWidth(128f), Util.getHeight(64f));
            Res.turtleLeft[v6].setPart(0, "1", 0, v4, new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21});
            Res.turtleLeft[v6].visible = false;
            Res.turtleLeft[v6].play(false);
        }

        for(v6 = 0; v6 < Res.turtleRight.length; ++v6) {
            Res.turtleRight[v6] = new Turtle(1, v9, v8);
            Res.turtleRight[v6].setSize(Util.getWidth(128f), Util.getHeight(64f));
            Res.turtleRight[v6].setPart(0, "1", 0, v4, new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21});
            Res.turtleRight[v6].visible = false;
            Res.turtleRight[v6].play(false);
        }
    }

    private static void iniWhale() {
        Res.rgFin[0] = Res.leaner.findRegion("whale/fin0");
        Res.rgFin[1] = Res.leaner.findRegion("whale/fin1");
        Res.rgFin[2] = Res.leaner.findRegion("whale/fin2");
        Res.rgFin[3] = Res.leaner.findRegion("whale/fin3");
        Res.rgFin[4] = Res.leaner.findRegion("whale/fin4");
        Res.rgFin[5] = Res.leaner.findRegion("whale/fin5");
        Res.rgFin[6] = Res.leaner.findRegion("whale/fin6");
        Res.rgFin[7] = Res.leaner.findRegion("whale/fin7");
        Res.rgFin[8] = Res.leaner.findRegion("whale/fin8");
        Res.rgFin[9] = Res.leaner.findRegion("whale/fin9");
        Res.rgFin[10] = Res.leaner.findRegion("whale/fin10");
        Res.rgFin[11] = Res.leaner.findRegion("whale/fin11");
        Res.rgFin[12] = Res.leaner.findRegion("whale/fin12");
        Res.rgFin[13] = Res.leaner.findRegion("whale/fin13");
        Res.rgFin[14] = Res.leaner.findRegion("whale/fin14");
        Res.rgFin[15] = Res.leaner.findRegion("whale/fin15");
        Res.rgFin[16] = Res.leaner.findRegion("whale/fin16");
        Res.rgFin[17] = Res.leaner.findRegion("whale/fin17");
        Res.rgFin[18] = Res.leaner.findRegion("whale/fin18");
        Res.rgFin[19] = Res.leaner.findRegion("whale/fin19");
        Res.rgFin[20] = Res.leaner.findRegion("whale/fin20");
        Res.rgFin[21] = Res.leaner.findRegion("whale/fin21");
        Res.rgFin[22] = Res.leaner.findRegion("whale/fin22");
        Res.rgFin[23] = Res.leaner.findRegion("whale/fin23");
        Res.rgWhale = Res.leaner.findRegion("whale/whale");
        Res.fin[0] = new Fin(1, 0.5f, 24);
        Res.fin[0].setSize(Util.getWidth(128f), Util.getHeight(128f));
        Res.fin[0].setPart(0, "1", 0, 0.05f, new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23});
        Res.fin[0].visible = false;
        Res.fin[0].play(false);
        Res.fin[1] = new Fin(1, 0.5f, 24);
        Res.fin[1].setSize(Util.getWidth(128f), Util.getHeight(128f));
        Res.fin[1].setPart(0, "1", 0, 0.05f, new int[]{0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23});
        Res.fin[1].visible = false;
        Res.fin[1].play(false);
    }
}

